{"version":3,"file":"static/js/5378.98eb700f.chunk.js","mappings":"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","sources":["app/form/BannerTable.js","app/views/banner/BannerList.js"],"sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { Grid, Button } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { showbannerDispatch } from \"reducers/HomeReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst columns = [\n  { field: \"id\", headerName: \"ID\", width: 90 },\n  {\n    field: \"image\",\n    headerName: \"Image\",\n    width: 300,\n    height: 300,\n    editable: true,\n    renderCell: (params) => <img src={params.value} style={{ height: 50 }} />,\n  },\n  {\n    field: \"description\",\n    headerName: \"Description\",\n    width: 300,\n    height: 300,\n    editable: true,\n  },\n  {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 300,\n    editable: true,\n    renderCell: (cellValues) => {\n      return (\n        <Box style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginLeft: 10 }}\n            onClick={(event) => {\n              // handleClick(event, cellValues);\n            }}\n          >\n            Delete\n          </Button>\n        </Box>\n      );\n    },\n  },\n];\n\nconst rows = [\n  {\n    id: 1,\n    image:\n      \"https://admin-six-iota.vercel.app/assets/images/products/headphone-2.jpg\",\n    name: \"Jon\",\n  },\n];\n\nexport default function BannerTable() {\n  const dispatch = useDispatch();\n  const [image, setImage] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const token = useSelector((state) => state.home.token);\n  const [bannerInfo, setbannerInfo] = useState([]);\n  const [bannerFeilds, setBannerFeilds] = useState([]);\n\n  // , formData,config\n\n  useEffect(() => {\n    var storageData = localStorage.getItem(\"banner_list\");\n    setBannerFeilds(JSON.parse(storageData));\n    console.log(\"lo;;yjpdr\", bannerFeilds);\n\n    // dispatch(showbannerDispatch(ID));\n  }, []);\n\n  const onImageChange = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const getBanners = () => {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    formData.append(\"description\", description);\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    };\n\n    axios\n      .post(\"https://loofer.bellazza.in/api/admin/banners\", formData, config)\n      .then((res) => {\n        let product = [];\n        if (res.status === 200) {\n          // res.data.banner.map((val)=>{\n          product.push(res.data.banner);\n          // })\n          setbannerInfo(product);\n        }\n\n        console.log({ res });\n      })\n      .catch((err) => {\n        console.error({ err });\n      });\n  };\n\n  const mapCategoryDataToRows = (data) => {\n    console.log(data, \"data\");\n    if (data && Array.isArray(data) && data.length > 0) {\n      return data.map((category) => ({\n        id: category?.id || Math.floor(new Date().getTime()),\n        description: category?.description,\n        image_url: category.image_url,\n        // Map other properties as needed\n      }));\n    } else {\n      return [];\n    }\n  };\n\n  var rows = mapCategoryDataToRows(bannerFeilds);\n\n  return (\n    <Box sx={{ height: 400, width: \"100%\" }}>\n      <Grid item xs={12} lg={6}>\n        <input\n          name=\"image\"\n          type=\"file\"\n          value={undefined}\n          onChange={onImageChange}\n          style={{\n            padding: 10,\n            width: \"100%\",\n            borderRadius: 5,\n            border: \"1px solid\",\n            marginTop: 10,\n          }}\n          inputProps={{\n            style: { padding: 12 },\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} lg={6}>\n        <input\n          name=\"description\"\n          type=\"text\"\n          onChange={(event) => setDescription(event.target.value)}\n          style={{\n            padding: 10,\n            width: \"100%\",\n            borderRadius: 5,\n            border: \"1px solid\",\n            marginTop: 10,\n          }}\n          inputProps={{\n            style: { padding: 12 },\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} lg={3}>\n        <Button\n          type=\"button\"\n          style={{\n            background: \"rgb(25, 118, 210)\",\n            color: \"white\",\n            marginTop: 30,\n            borderRadius: 5,\n            width: \"100%\",\n          }}\n          onClick={getBanners}\n        >\n          Get Banners\n        </Button>\n      </Grid>\n      <DataGrid\n        rows={bannerInfo.length > 0 ? bannerInfo : rows}\n        columns={columns}\n        getRowId={(row) => row.id}\n        // initialState={{\n        // \tpagination: {\n        // \t\tpaginationModel: {\n        // \t\t\tpageSize: 5\n        // \t\t}\n        // \t}\n        // }}\n        // pageSizeOptions={[5]}\n        checkboxSelection\n        disableRowSelectionOnClick\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport {Box, Divider } from '@mui/material';\nimport BannerTable from 'app/form/BannerTable';\n\nconst BannerList = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Box\n\t\t\t\tstyle={{\n\t\t\t\t\tboxShadow:\n\t\t\t\t\t\t'rgba(0, 0, 0, 0.06) 0px 3px 3px -2px, rgba(0, 0, 0, 0.04) 0px 3px 4px 0px, rgba(0, 0, 0, 0.04) 0px 1px 8px 0px',\n\t\t\t\t\tpadding: 30,\n\t\t\t\t\tbackground: 'white'\n\t\t\t\t}}>\n\t\t\t\t<h2>Banner List</h2>\n\t\t\t\t<Divider style={{ marginTop: 20, marginBottom: 20 }} />\n\t\t\t\t<BannerTable />\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default BannerList;\n"],"names":["columns","field","headerName","width","height","editable","renderCell","params","src","value","style","cellValues","Box","display","justifyContent","Button","variant","color","marginLeft","onClick","event","BannerTable","useDispatch","useState","image","setImage","description","setDescription","useSelector","state","home","token","bannerInfo","setbannerInfo","bannerFeilds","setBannerFeilds","useEffect","storageData","localStorage","getItem","JSON","parse","console","log","data","rows","Array","isArray","length","map","category","id","Math","floor","Date","getTime","image_url","sx","Grid","item","xs","lg","name","type","undefined","onChange","e","target","files","padding","borderRadius","border","marginTop","inputProps","background","formData","FormData","append","config","headers","Authorization","axios","then","res","product","status","push","banner","catch","err","error","DataGrid","getRowId","row","checkboxSelection","disableRowSelectionOnClick","boxShadow","Divider","marginBottom"],"sourceRoot":""}