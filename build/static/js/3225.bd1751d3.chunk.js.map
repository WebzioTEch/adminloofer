{"version":3,"file":"static/js/3225.bd1751d3.chunk.js","mappings":"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","sources":["app/components/Footer.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/ShoppingCart.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/Brand.jsx","app/navigations.js","app/components/Sidenav.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/NotificationBar/NotificationBar.jsx","app/components/MatxLayout/Layout1/Layout1.jsx","app/utils/utils.js"],"sourcesContent":["import { AppBar, Button, ThemeProvider, Toolbar, styled, useTheme } from '@mui/material';\nimport useSettings from 'app/hooks/useSettings';\nimport { topBarHeight } from 'app/utils/constant';\nimport { Paragraph, Span } from './Typography';\n\nconst AppFooter = styled(Toolbar)(() => ({\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tminHeight: topBarHeight,\n\t'@media (max-width: 499px)': {\n\t\tdisplay: 'table',\n\t\twidth: '100%',\n\t\tminHeight: 'auto',\n\t\tpadding: '1rem 0',\n\t\t'& .container': {\n\t\t\tflexDirection: 'column !important',\n\t\t\t'& a': { margin: '0 0 16px !important' }\n\t\t}\n\t}\n}));\n\nconst FooterContent = styled('div')(() => ({\n\twidth: '100%',\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tpadding: '0px 1rem',\n\tmaxWidth: '1170px',\n\tmargin: '0 auto'\n}));\n\nconst Footer = () => {\n\tconst theme = useTheme();\n\tconst { settings } = useSettings();\n\n\tconst footerTheme = settings.themes[settings.footer.theme] || theme;\n\n\treturn (\n\t\t<>\n\t\t\t{/* <ThemeProvider theme={footerTheme}>\n\t\t\t\t<AppBar color='primary' position='static' sx={{ zIndex: 96 }}>\n\t\t\t\t\t<AppFooter>\n\t\t\t\t\t\t<FooterContent>\n\t\t\t\t\t\t\t<a href='https://ui-lib.com/downloads/matx-pro-react-admin/'>\n\t\t\t\t\t\t\t\t<Button variant='contained' color='secondary'>\n\t\t\t\t\t\t\t\t\tGet MatX Pro\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<Span sx={{ m: 'auto' }}></Span>\n\t\t\t\t\t\t\t<Paragraph sx={{ m: 0 }}>\n\t\t\t\t\t\t\t\tDesign and Developed by <a href='http://ui-lib.com'>UI Lib</a>\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t</FooterContent>\n\t\t\t\t\t</AppFooter>\n\t\t\t\t</AppBar>\n\t\t\t</ThemeProvider> */}\n\t\t</>\n\t);\n};\n\nexport default Footer;\n","import { ThemeProvider, useTheme } from '@mui/material';\nimport useSettings from 'app/hooks/useSettings';\n\nconst SidenavTheme = ({ children }) => {\n  const theme = useTheme();\n  const { settings } = useSettings();\n  const sidenavTheme = settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\n\n  return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>;\n};\n\nexport default SidenavTheme;\n","import { Badge, styled } from '@mui/material';\n\nconst BadgeSelected = styled(Badge)(() => ({\n  top: '0',\n  right: '0',\n  height: '32px',\n  width: '32px',\n  borderRadius: '50%'\n}));\n\nexport default BadgeSelected;\n","import {\n  Box,\n  Button,\n  Card,\n  Drawer,\n  Icon,\n  IconButton,\n  Link,\n  styled,\n  ThemeProvider,\n  Tooltip,\n  useTheme\n} from '@mui/material';\nimport useSettings from 'app/hooks/useSettings';\nimport { Fragment, useState } from 'react';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport { themeShadows } from '../MatxTheme/themeColors';\nimport { H5, Span } from '../Typography';\nimport BadgeSelected from './BadgeSelected';\n\nconst Label = styled(Span)(({ theme }) => ({\n  fontWeight: 700,\n  fontSize: '1rem',\n  cursor: 'pointer',\n  borderRadius: '4px',\n  marginBottom: '2.5rem',\n  letterSpacing: '1.5px',\n  padding: '.25rem .5rem',\n  transform: 'rotate(90deg)',\n  color: theme.palette.secondary.main,\n  backgroundColor: theme.palette.primary.dark,\n  '&:hover, &.open': {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  }\n}));\n\nconst MaxCustomaizer = styled('div')(({ theme }) => ({\n  top: 0,\n  right: 0,\n  zIndex: 50,\n  width: 320,\n  display: 'flex',\n  height: '100vh',\n  position: 'fixed',\n  paddingBottom: '32px',\n  flexDirection: 'column',\n  boxShadow: themeShadows[12],\n  background: theme.palette.background.default,\n  '& .helpText': { margin: '0px .5rem 1rem' }\n}));\n\nconst LayoutBox = styled(BadgeSelected)(() => ({\n  width: '100%',\n  height: '152px !important',\n  cursor: 'pointer',\n  marginTop: '12px',\n  marginBottom: '12px',\n  '& .layout-name': { display: 'none' },\n  '&:hover .layout-name': {\n    zIndex: 12,\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    justifyContent: 'center',\n    background: 'rgba(0,0,0,0.3)'\n  }\n}));\n\nconst Controller = styled('div')(() => ({\n  minHeight: 58,\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: '16px',\n  padding: '14px 20px',\n  boxShadow: themeShadows[6],\n  justifyContent: 'space-between'\n}));\n\nconst IMG = styled('img')(() => ({ width: '100%' }));\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n  paddingLeft: '16px',\n  paddingRight: '16px'\n}));\n\nconst MatxCustomizer = () => {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const [tabIndex, setTabIndex] = useState(0);\n  const { settings, updateSettings } = useSettings();\n  const secondary = theme.palette.text.secondary;\n\n  const tooglePanel = () => setOpen(!open);\n\n  const handleTabChange = (index) => setTabIndex(index);\n\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\n\n  return (\n    <Fragment>\n      <Tooltip title=\"Theme Settings\" placement=\"left\">\n        <Label className=\"open\" onClick={tooglePanel}>\n          DEMOS\n        </Label>\n      </Tooltip>\n\n      <ThemeProvider theme={activeTheme}>\n        <Drawer\n          open={open}\n          anchor=\"right\"\n          variant=\"temporary\"\n          onClose={tooglePanel}\n          ModalProps={{ keepMounted: true }}\n        >\n          <MaxCustomaizer>\n            <Controller>\n              <Box display=\"flex\">\n                <Icon className=\"icon\" color=\"primary\">\n                  settings\n                </Icon>\n                <H5 sx={{ ml: 1, fontSize: '1rem' }}>Theme Settings</H5>\n              </Box>\n\n              <IconButton onClick={tooglePanel}>\n                <Icon className=\"icon\">close</Icon>\n              </IconButton>\n            </Controller>\n\n            <Box px={3} mb={2} display=\"flex\">\n              <Button\n                variant=\"outlined\"\n                onClick={() => handleTabChange(0)}\n                color={tabIndex === 0 ? 'secondary' : 'primary'}\n                sx={{ mr: 2 }}\n              >\n                Demos\n              </Button>\n              <Button\n                variant=\"outlined\"\n                onClick={() => handleTabChange(1)}\n                color={tabIndex === 1 ? 'secondary' : 'primary'}\n              >\n                Settings\n              </Button>\n            </Box>\n\n            <StyledScrollBar options={{ suppressScrollX: true }}>\n              {tabIndex === 0 && (\n                <Box sx={{ mb: 4, mx: 3 }}>\n                  <Box sx={{ color: secondary }}>Layouts</Box>\n\n                  <Box display=\"flex\" flexDirection=\"column\">\n                    {demoLayouts.map((layout) => (\n                      <LayoutBox\n                        key={layout.name}\n                        color=\"secondary\"\n                        badgeContent={'Pro'}\n                        invisible={!layout.isPro}\n                      >\n                        <Card\n                          elevation={4}\n                          sx={{ position: 'relative' }}\n                          onClick={() => updateSettings(layout.options)}\n                        >\n                          <Box sx={{ overflow: 'hidden' }} className=\"layout-name\">\n                            <Button variant=\"contained\" color=\"secondary\">\n                              {layout.name}\n                            </Button>\n                          </Box>\n\n                          <IMG src={layout.thumbnail} alt={layout.name} />\n                        </Card>\n                      </LayoutBox>\n                    ))}\n                  </Box>\n                </Box>\n              )}\n\n              {/* END LAYOUT */}\n              {tabIndex === 1 && (\n                <div>\n                  <div className=\"helpText\">\n                    We used React context API to control layout. Check out the{' '}\n                    <Link href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\" target=\"_blank\">\n                      Documentation\n                    </Link>\n                  </div>\n                </div>\n              )}\n            </StyledScrollBar>\n          </MaxCustomaizer>\n        </Drawer>\n      </ThemeProvider>\n    </Fragment>\n  );\n};\n\nconst demoLayouts = [\n  {\n    isPro: false,\n    name: 'Light Sidebar',\n    thumbnail: '/assets/images/screenshots/layout1-customizer.png',\n    options: {\n      activeTheme: 'blue',\n      activeLayout: 'layout1',\n      layout1Settings: {\n        topbar: { theme: 'blueDark', fixed: true },\n        leftSidebar: { mode: 'full', theme: 'whiteBlue', bgOpacity: 0.98 }\n      },\n      footer: { theme: 'slateDark1' }\n    }\n  },\n  {\n    isPro: false,\n    name: 'Compact Sidebar',\n    thumbnail: '/assets/images/screenshots/layout5-customizer.png',\n    options: {\n      activeTheme: 'blue',\n      activeLayout: 'layout1',\n      layout1Settings: {\n        topbar: { theme: 'whiteBlue', fixed: true },\n        leftSidebar: { mode: 'compact', theme: 'slateDark1', bgOpacity: 0.92 }\n      }\n    }\n  },\n  {\n    isPro: false,\n    name: 'Dark Sidebar',\n    thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\n    options: {\n      activeTheme: 'blue',\n      activeLayout: 'layout1',\n      layout1Settings: {\n        topbar: { theme: 'blueDark', fixed: true },\n        leftSidebar: { mode: 'full', theme: 'slateDark1', bgOpacity: 0.92 }\n      }\n    }\n  }\n];\n\nexport default MatxCustomizer;\n","import { Fragment, useState } from 'react';\nimport { Badge, Button, Drawer, IconButton, ThemeProvider, Box, styled } from '@mui/material';\nimport { Clear, KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport { H6, Small } from './Typography';\nimport useSettings from 'app/hooks/useSettings';\nimport { themeShadows } from './MatxTheme/themeColors';\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant';\n\n// styled components\nconst MiniCart = styled(Box)({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  width: sideNavWidth\n});\n\nconst CartBox = styled(Box)({\n  padding: '4px',\n  paddingLeft: '16px',\n  display: 'flex',\n  alignItems: 'center',\n  boxShadow: themeShadows[6],\n  height: topBarHeight,\n  '& h5': {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: '16px',\n    fontWeight: '500'\n  }\n});\n\nconst ProductBox = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  padding: '8px 8px',\n  transition: 'background 300ms ease',\n  '&:hover': { background: 'rgba(0,0,0,0.01)' }\n});\n\nconst IMG = styled('img')({ width: 48 });\n\nconst ProductDetails = styled(Box)({\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  '& h6': {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    display: 'block',\n    width: 120,\n    marginBottom: '4px'\n  }\n});\n\nconst data = [\n  {\n    qty: 1,\n    price: 987,\n    title: 'Bit Bass Headphone',\n    id: '333sa680bdf4976dfgga21rt4',\n    imgUrl: '/assets/images/products/headphone-2.jpg'\n  },\n  {\n    qty: 1,\n    price: 454,\n    title: 'Bass Speaker 1',\n    id: '323sa680b324976dfgga21rt47',\n    imgUrl: '/assets/images/products/speaker-2.jpg'\n  },\n  {\n    qty: 1,\n    price: 134,\n    title: 'Bass Speaker 2',\n    id: '323sa680bdf4976dfgga21rt4',\n    imgUrl: '/assets/images/products/headphone-1.jpg'\n  }\n];\n\nfunction ShoppingCart({ container }) {\n  const { settings } = useSettings();\n  const [panelOpen, setPanelOpen] = useState(false);\n  const [cartList, setCartList] = useState([...data]);\n\n  const handleDrawerToggle = () => setPanelOpen(!panelOpen);\n\n  const handleCheckoutClick = () => setPanelOpen(false);\n\n  const handleAddQty = (id) => {\n    setCartList((state) =>\n      state.map((item) => (item.id === id ? { ...item, qty: item.qty + 1 } : item))\n    );\n  };\n\n  const handleRemoveQty = (id) => {\n    setCartList((state) =>\n      state.map((item) => (item.id === id ? { ...item, qty: item.qty - 1 } : item))\n    );\n  };\n\n  const totalCost = cartList.reduce((prev, curr) => prev + curr.qty * curr.price, 0);\n\n  return (\n    <Fragment>\n      <IconButton onClick={handleDrawerToggle}>\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\n          <ShoppingCartIcon sx={{ color: 'text.primary' }} />\n        </Badge>\n      </IconButton>\n\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n        <Drawer\n          anchor=\"right\"\n          open={panelOpen}\n          variant=\"temporary\"\n          container={container}\n          onClose={handleDrawerToggle}\n          ModalProps={{ keepMounted: true }}\n        >\n          <MiniCart>\n            <CartBox>\n              <ShoppingCartIcon color=\"primary\" />\n              <h5>Cart</h5>\n            </CartBox>\n\n            <Box flexGrow={1} overflow=\"auto\">\n              {cartList.map((product, i) => (\n                <ProductBox key={i}>\n                  <Box mr=\"4px\" display=\"flex\" flexDirection=\"column\">\n                    <IconButton size=\"small\" onClick={() => handleAddQty(product.id)}>\n                      <KeyboardArrowUp />\n                    </IconButton>\n\n                    <IconButton\n                      onClick={() => handleRemoveQty(product.id)}\n                      disabled={!(product.qty - 1)}\n                      size=\"small\"\n                    >\n                      <KeyboardArrowDown />\n                    </IconButton>\n                  </Box>\n\n                  <Box mr={1}>\n                    <IMG src={product.imgUrl} alt={product.title} />\n                  </Box>\n\n                  <ProductDetails>\n                    <H6>{product.title}</H6>\n                    <Small color=\"text.secondary\">\n                      ${product.price} x {product.qty}\n                    </Small>\n                  </ProductDetails>\n\n                  <IconButton size=\"small\">\n                    <Clear fontSize=\"small\" />\n                  </IconButton>\n                </ProductBox>\n              ))}\n            </Box>\n\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleCheckoutClick}\n              sx={{ width: '100%', borderRadius: 0 }}\n            >\n              Checkout (${totalCost.toFixed(2)})\n            </Button>\n          </MiniCart>\n        </Drawer>\n      </ThemeProvider>\n    </Fragment>\n  );\n}\n\nexport default ShoppingCart;\n","import { Icon, IconButton } from '@mui/material';\nimport { styled, useTheme } from '@mui/material';\nimport { Chatbox, ChatHead } from 'app/components';\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer';\nimport ShoppingCart from '../ShoppingCart';\nimport { Span } from '../Typography';\n\nconst SidebarRoot = styled('div')(({ theme, width }) => ({\n  position: 'fixed',\n  height: '100vh',\n  width: width,\n  right: 0,\n  bottom: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  boxShadow: theme.shadows[8],\n  backgroundColor: theme.palette.primary.main,\n  zIndex: 98,\n  transition: 'all 0.15s ease',\n  color: theme.palette.text.primary,\n  '@global': {\n    '@media screen and (min-width: 767px)': {\n      '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\n        marginRight: (props) => props.width\n      },\n      '.matx-customizer': {\n        right: (props) => props.width\n      }\n    },\n    '@media screen and (max-width: 959px)': {\n      '.toolbar-menu-wrap .menu-area': {\n        width: (props) => `calc(100% - ${props.width})`\n      }\n    }\n  }\n}));\n\nconst SecondarySidebarContent = () => {\n  const { palette } = useTheme();\n  const textColor = palette.primary.contrastText;\n  return (\n    <SidebarRoot width={'50px'} className=\"secondary-sidebar\">\n      <Span sx={{ m: 'auto' }}></Span>\n      <MatxCustomizer />\n      <ShoppingCart />\n\n      <ChatHead\n        icon={\n          <IconButton sx={{ my: '12px', color: textColor }} size=\"small\">\n            <Icon>comments</Icon>\n          </IconButton>\n        }\n      >\n        <Chatbox />\n      </ChatHead>\n      <Span sx={{ m: 'auto' }}></Span>\n    </SidebarRoot>\n  );\n};\n\nexport default SecondarySidebarContent;\n","import { Fab, Icon, IconButton } from '@mui/material';\nimport { styled, useTheme } from '@mui/material';\nimport useSettings from 'app/hooks/useSettings';\nimport clsx from 'clsx';\n\nconst Toggle = styled('div')(() => ({\n  position: 'fixed',\n  right: '30px',\n  bottom: '50px',\n  zIndex: 99,\n  transition: 'all 0.15s ease',\n  '&.open': {\n    right: '10px'\n  }\n}));\n\nconst SecondarySidebarToggle = () => {\n  const { settings, updateSettings } = useSettings();\n\n  const toggle = () => {\n    updateSettings({ secondarySidebar: { open: !settings.secondarySidebar.open } });\n  };\n\n  const { palette } = useTheme();\n  const textColor = palette.primary.contrastText;\n\n  return (\n    <Toggle className={clsx({ open: settings.secondarySidebar.open })}>\n      {settings.secondarySidebar.open && (\n        <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\n          <Icon sx={{ color: textColor }}>close</Icon>\n        </IconButton>\n      )}\n\n      {!settings.secondarySidebar.open && (\n        <Fab color=\"primary\" aria-label=\"expand\" onClick={toggle}>\n          <Icon sx={{ color: textColor }}>settings</Icon>\n        </Fab>\n      )}\n    </Toggle>\n  );\n};\n\nexport default SecondarySidebarToggle;\n","import { Box, styled } from '@mui/material';\nimport { MatxLogo } from 'app/components';\nimport logo from '../../assets/new/loofer.jpeg';\nimport useSettings from 'app/hooks/useSettings';\nimport { Span } from './Typography';\n\nconst BrandRoot = styled(Box)(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: '20px 18px 20px 29px',\n  background: 'white'\n}));\n\nconst StyledSpan = styled(Span)(({ mode }) => ({\n  fontSize: 18,\n  marginLeft: '.5rem',\n  display: mode === 'compact' ? 'none' : 'block'\n}));\n\nconst Brand = ({ children }) => {\n  const { settings } = useSettings();\n  const leftSidebar = settings.layout1Settings.leftSidebar;\n  const { mode } = leftSidebar;\n\n  return (\n    <BrandRoot>\n      <Box display=\"flex\" alignItems=\"center\">\n        {/* <MatxLogo /> */}\n        <img src={logo} style={{ height: 25, width: '150px' }} />\n      </Box>\n\n      {/* <Box className=\"sidenavHoverShow\" sx={{ display: mode === 'compact' ? 'none' : 'block' }}>\n        {children || null}\n      </Box> */}\n    </BrandRoot>\n  );\n};\n\nexport default Brand;\n","export const navigations = [\n\t{ name: 'Dashboard', path: '/dashboard/default', icon: 'dashboard' },\n\t// { name: 'Inventory Management', path: '/dashboard/inventory', icon: 'store' },\n\t{ label: 'Sections', type: 'label' },\n\n\t{\n\t\tname: 'Customer',\n\t\ticon: 'people',\n\t\tchildren: [\n\t\t\t{ name: 'Customer List', iconText: 'SI', path: '/dashboard/customerlist' },\n\t\t\t// { name: 'View Customer', iconText: 'SU', path: '/session/signup' },\n\t\t\t{ name: 'Add Customer', iconText: 'FP', path: '/dashboard/addcustomer' }\n\t\t]\n\t},\n\t{\n\t\tname: 'Product',\n\t\ticon: 'shopping_cart',\n\t\tchildren: [\n\t\t\t{ name: 'Product List', iconText: 'SI', path: '/dashboard/productlist' },\n\t\t\t// { name: 'View Product', iconText: 'SU', path: '/session/signup' },\n\t\t\t{ name: 'Add Product', iconText: 'FP', path: '/dashboard/newproduct' }\n\t\t]\n\t},\n\t{\n\t\tname: 'Order',\n\t\ticon: 'folder',\n\t\tchildren: [\n\t\t\t{ name: 'Order List', iconText: 'SI', path: '/dashboard/orderlist' },\n\t\t\t// { name: 'View Order', iconText: 'SU', path: '/dashboard/orderdetails' }\n\t\t]\n\t},\n\t{\n\t\tname: 'Category',\n\t\ticon: 'category',\n\t\tchildren: [\n\t\t\t{ name: 'Category List', iconText: 'SI', path: '/dashboard/categorylist' },\n\t\t\t// { name: 'View Category', iconText: 'SU', path: '/session/signup' },\n\t\t\t{ name: 'Add Category', iconText: 'SU', path: '/dashboard/addcategory' }\n\t\t]\n\t},\n\t{\n\t\tname: 'Banner',\n\t\ticon: 'imagesmode',\n\t\tchildren: [\n\t\t\t{ name: 'Banner List', iconText: 'SI', path: '/dashboard/bannerlist' },\n\t\t\t{ name: 'Add Banner', iconText: 'SU', path: '/dashboard/addbanner' }\n\t\t]\n\t},\n\t{\n\t\tname: 'FAQ',\n\t\ticon: 'quiz',\n\t\tchildren: [\n\t\t\t{ name: 'FAQ List', iconText: 'SI', path: '/dashboard/faqlist' },\n\t\t\t{ name: 'Add FAQ', iconText: 'SU', path: '/dashboard/addfaq' }\n\t\t]\n\t},\n\t{\n\t\tname: 'Static page',\n\t\ticon: 'quiz',\n\t\tchildren: [\n\t\t\t{ name: 'Static page List', iconText: 'SI', path: '/dashboard/staticpagelist' },\n\t\t\t{ name: 'Add Static page', iconText: 'SU', path: '/dashboard/addstaticpage' }\n\t\t]\n\t},\n\t{\n\t\tname: 'Website Setting',\n\t\ticon: 'settings',\n\t\tchildren: [\n\t\t\t{ name: 'Category List', iconText: 'SI', path: '/session/signin' },\n\t\t\t// { name: 'View Category', iconText: 'SU', path: '/session/signup' },\n\t\t\t{ name: 'Add Category', iconText: 'SU', path: '/session/signup' }\n\t\t]\n\t},\n\t{\n\t\tname: 'Coupon',\n\t\ticon: 'redeem',\n\t\tchildren: [\n\t\t\t{ name: 'Coupon List', iconText: 'SI', path: 'dashboard/couponlist' },\n\t\t\t{ name: 'Add Coupon', iconText: 'SU', path: '/dashboard/addcoupon' }\n\t\t]\n\t},\n\t{ label: 'PAGES', type: 'label' },\n\t{ name: 'Privacy Policy', path: '/dashboard/privacy', icon: 'shield_locked' },\n\t{\n\t\tname: 'Term & Condition',\n\t\tpath: '/dashboard/termcondition',\n\t\ticon: 'shield_locked'\n\t},\n\t{ name: 'About US', path: '/dashboard/aboutus', icon: 'view_compact_alt' }\n];\n","import { Fragment } from 'react';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport { styled } from '@mui/material';\nimport { MatxVerticalNav } from 'app/components';\nimport useSettings from 'app/hooks/useSettings';\nimport { navigations } from 'app/navigations';\n\nconst IconAndTextColor = styled('div')`\n  color: black;\n  .icon {\n    color: black;\n  }\n`;\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n  paddingLeft: '1rem',\n  paddingRight: '1rem',\n  position: 'relative',\n  overflowY: 'auto',\n  background: 'white'\n}));\n\nconst SideNavMobile = styled('div')(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  width: '100vw',\n  background: 'rgba(0, 0, 0, 0.54)',\n  zIndex: -1,\n  [theme.breakpoints.up('lg')]: { display: 'none' }\n}));\n\nconst Sidenav = ({ children }) => {\n  const { settings, updateSettings } = useSettings();\n\n  const updateSidebarMode = (sidebarSettings) => {\n    let activeLayoutSettingsName = settings.activeLayout + 'Settings';\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\n\n    updateSettings({\n      ...settings,\n      [activeLayoutSettingsName]: {\n        ...activeLayoutSettings,\n        leftSidebar: {\n          ...activeLayoutSettings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      <StyledScrollBar\n        options={{ suppressScrollX: true }}\n        // style={{ background: 'white' }}\n      >\n        <IconAndTextColor>\n          {children}\n          <MatxVerticalNav items={navigations} style={{ color: 'black' }} />\n        </IconAndTextColor>\n      </StyledScrollBar>\n\n      <SideNavMobile\n        onClick={() => updateSidebarMode({ mode: 'close' })}\n        style={{ color: 'black !important' }}\n      />\n    </Fragment>\n  );\n};\n\nexport default Sidenav;\n","import { memo } from 'react';\nimport { Hidden, Switch, Box, styled, useTheme } from '@mui/material';\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\nimport useSettings from 'app/hooks/useSettings';\nimport { convertHexToRGB } from 'app/utils/utils';\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant';\nimport Brand from '../../Brand';\nimport Sidenav from '../../Sidenav';\n\nconst SidebarNavRoot = styled(Box)(({ theme, width, bg, image }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  height: '100vh',\n  width: width,\n  boxShadow: themeShadows[8],\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'top',\n  backgroundSize: 'cover',\n  zIndex: 111,\n  overflow: 'hidden',\n  color: theme.palette.text.primary,\n  transition: 'all 250ms ease-in-out',\n  backgroundImage: `linear-gradient(to bottom, rgba(${bg}, 0.96), rgba(${bg}, 0.96)), url(${image})`,\n  '&:hover': {\n    width: sideNavWidth,\n    '& .sidenavHoverShow': { display: 'block' },\n    '& .compactNavItem': {\n      width: '100%',\n      maxWidth: '100%',\n      '& .nav-bullet': { display: 'block' },\n      '& .nav-bullet-text': { display: 'none' }\n    }\n  }\n}));\n\nconst NavListBox = styled(Box)({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column'\n});\n\nconst Layout1Sidenav = () => {\n  const theme = useTheme();\n  const { settings, updateSettings } = useSettings();\n  const leftSidebar = settings.layout1Settings.leftSidebar;\n  const { mode, bgImgURL } = leftSidebar;\n\n  const getSidenavWidth = () => {\n    switch (mode) {\n      case 'compact':\n        return sidenavCompactWidth;\n\n      default:\n        return sideNavWidth;\n    }\n  };\n\n  const primaryRGB = convertHexToRGB(theme.palette.primary.main);\n\n  const updateSidebarMode = (sidebarSettings) => {\n    updateSettings({ layout1Settings: { leftSidebar: { ...sidebarSettings } } });\n  };\n\n  const handleSidenavToggle = () => {\n    updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' });\n  };\n\n  return (\n    <SidebarNavRoot image={bgImgURL} bg={primaryRGB} width={getSidenavWidth()}>\n      <NavListBox>\n        <Brand>\n          <Hidden smDown>\n            <Switch\n              onChange={handleSidenavToggle}\n              checked={leftSidebar.mode !== 'full'}\n              color=\"secondary\"\n              size=\"small\"\n            />\n          </Hidden>\n        </Brand>\n        <Sidenav />\n      </NavListBox>\n    </SidebarNavRoot>\n  );\n};\n\nexport default memo(Layout1Sidenav);\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Avatar,\n  Hidden,\n  Icon,\n  IconButton,\n  MenuItem,\n  useMediaQuery,\n  Box,\n  styled,\n  useTheme\n} from '@mui/material';\n\nimport { MatxMenu, MatxSearchBox } from 'app/components';\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\nimport { NotificationProvider } from 'app/contexts/NotificationContext';\nimport useAuth from 'app/hooks/useAuth';\nimport useSettings from 'app/hooks/useSettings';\nimport { topBarHeight } from 'app/utils/constant';\n\nimport { Span } from '../../Typography';\nimport NotificationBar from '../../NotificationBar/NotificationBar';\nimport ShoppingCart from '../../ShoppingCart';\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n  color: theme.palette.text.primary\n}));\n\nconst TopbarRoot = styled('div')({\n  top: 0,\n  zIndex: 96,\n  height: topBarHeight,\n  boxShadow: themeShadows[8],\n  transition: 'all 0.3s ease'\n});\n\nconst TopbarContainer = styled(Box)(({ theme }) => ({\n  padding: '8px',\n  paddingLeft: 18,\n  paddingRight: 20,\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  background: theme.palette.primary.main,\n  [theme.breakpoints.down('sm')]: {\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n  [theme.breakpoints.down('xs')]: {\n    paddingLeft: 14,\n    paddingRight: 16\n  }\n}));\n\nconst UserMenu = styled(Box)({\n  padding: 4,\n  display: 'flex',\n  borderRadius: 24,\n  cursor: 'pointer',\n  alignItems: 'center',\n  '& span': { margin: '0 8px' }\n});\n\nconst StyledItem = styled(MenuItem)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  minWidth: 185,\n  '& a': {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    textDecoration: 'none'\n  },\n  '& span': { marginRight: '10px', color: theme.palette.text.primary }\n}));\n\nconst IconBox = styled('div')(({ theme }) => ({\n  display: 'inherit',\n  [theme.breakpoints.down('md')]: { display: 'none !important' }\n}));\n\nconst Layout1Topbar = () => {\n  const theme = useTheme();\n  const { settings, updateSettings } = useSettings();\n  const { logout, user } = useAuth();\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const updateSidebarMode = (sidebarSettings) => {\n    updateSettings({ layout1Settings: { leftSidebar: { ...sidebarSettings } } });\n  };\n\n  const handleSidebarToggle = () => {\n    let { layout1Settings } = settings;\n    let mode;\n    if (isMdScreen) {\n      mode = layout1Settings.leftSidebar.mode === 'close' ? 'mobile' : 'close';\n    } else {\n      mode = layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full';\n    }\n    updateSidebarMode({ mode });\n  };\n\n  return (\n    <TopbarRoot>\n      <TopbarContainer>\n        <Box display=\"flex\">\n          <StyledIconButton onClick={handleSidebarToggle}>\n            <Icon>menu</Icon>\n          </StyledIconButton>\n\n          <IconBox>\n            {/* <StyledIconButton>\n              <Icon>mail_outline</Icon>\n            </StyledIconButton> */}\n\n            {/* <StyledIconButton>\n              <Icon>web_asset</Icon>\n            </StyledIconButton> */}\n\n            {/* <StyledIconButton>\n              <Icon>star_outline</Icon>\n            </StyledIconButton> */}\n          </IconBox>\n        </Box>\n\n        <Box display=\"flex\" alignItems=\"center\">\n          <MatxSearchBox />\n\n          {/* <NotificationProvider>\n            <NotificationBar />\n          </NotificationProvider> */}\n\n          {/* <ShoppingCart /> */}\n\n          <MatxMenu\n            menuButton={\n              <UserMenu>\n                <Hidden xsDown>\n                  <Span>\n                    Hi{' '}\n                    <strong>\n                      Welcome Admin\n                      {/* {user.name} */}\n                    </strong>\n                  </Span>\n                </Hidden>\n                <Avatar\n                  src=\"\"\n                  // {user.avatar}\n                  sx={{ cursor: 'pointer' }}\n                />\n              </UserMenu>\n            }\n          >\n            <StyledItem>\n              <Link to=\"/\">\n                <Icon> home </Icon>\n                <Span> Home </Span>\n              </Link>\n            </StyledItem>\n\n            <StyledItem>\n              <Link to=\"/page-layouts/user-profile\">\n                <Icon> person </Icon>\n                <Span> Profile </Span>\n              </Link>\n            </StyledItem>\n\n            <StyledItem>\n              <Icon> settings </Icon>\n              <Span> Settings </Span>\n            </StyledItem>\n\n            <StyledItem onClick={logout}>\n              <Icon> power_settings_new </Icon>\n              <Span> Logout </Span>\n            </StyledItem>\n          </MatxMenu>\n        </Box>\n      </TopbarContainer>\n    </TopbarRoot>\n  );\n};\n\nexport default memo(Layout1Topbar);\n","import {\n  Badge,\n  Button,\n  Card,\n  Drawer,\n  Icon,\n  IconButton,\n  ThemeProvider,\n  Box,\n  styled,\n  useTheme\n} from '@mui/material';\nimport { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useNotification from 'app/hooks/useNotification';\nimport useSettings from 'app/hooks/useSettings';\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant';\nimport { getTimeDifference } from 'app/utils/utils.js';\nimport { themeShadows } from '../MatxTheme/themeColors';\nimport { Paragraph, Small } from '../Typography';\n\nconst Notification = styled('div')(() => ({\n  padding: '16px',\n  marginBottom: '16px',\n  display: 'flex',\n  alignItems: 'center',\n  height: topBarHeight,\n  boxShadow: themeShadows[6],\n  '& h5': {\n    marginLeft: '8px',\n    marginTop: 0,\n    marginBottom: 0,\n    fontWeight: '500'\n  }\n}));\n\nconst NotificationCard = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  '&:hover': {\n    '& .messageTime': {\n      display: 'none'\n    },\n    '& .deleteButton': {\n      opacity: '1'\n    }\n  },\n  '& .messageTime': {\n    color: theme.palette.text.secondary\n  },\n  '& .icon': { fontSize: '1.25rem' }\n}));\n\nconst DeleteButton = styled(IconButton)(({ theme }) => ({\n  opacity: '0',\n  position: 'absolute',\n  right: 5,\n  marginTop: 9,\n  marginRight: '24px',\n  background: 'rgba(0, 0, 0, 0.01)'\n}));\n\nconst CardLeftContent = styled('div')(({ theme }) => ({\n  padding: '12px 8px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  background: 'rgba(0, 0, 0, 0.01)',\n  '& small': {\n    fontWeight: '500',\n    marginLeft: '16px',\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Heading = styled('span')(({ theme }) => ({\n  fontWeight: '500',\n  marginLeft: '16px',\n  color: theme.palette.text.secondary\n}));\n\nconst NotificationBar = ({ container }) => {\n  const { settings } = useSettings();\n  const theme = useTheme();\n  const secondary = theme.palette.text.secondary;\n  const [panelOpen, setPanelOpen] = useState(false);\n  const { deleteNotification, clearNotifications, notifications } = useNotification();\n\n  const handleDrawerToggle = () => {\n    setPanelOpen(!panelOpen);\n  };\n\n  const { palette } = useTheme();\n  const textColor = palette.text.primary;\n\n  return (\n    <Fragment>\n      <IconButton onClick={handleDrawerToggle}>\n        <Badge color=\"secondary\" badgeContent={notifications?.length}>\n          <Icon sx={{ color: textColor }}>notifications</Icon>\n        </Badge>\n      </IconButton>\n\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n        <Drawer\n          width={'100px'}\n          container={container}\n          variant=\"temporary\"\n          anchor={'right'}\n          open={panelOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true\n          }}\n        >\n          <Box sx={{ width: sideNavWidth }}>\n            <Notification>\n              <Icon color=\"primary\">notifications</Icon>\n              <h5>Notifications</h5>\n            </Notification>\n\n            {notifications?.map((notification) => (\n              <NotificationCard key={notification.id}>\n                <DeleteButton\n                  size=\"small\"\n                  className=\"deleteButton\"\n                  onClick={() => deleteNotification(notification.id)}\n                >\n                  <Icon className=\"icon\">clear</Icon>\n                </DeleteButton>\n                <Link\n                  to={`/${notification.path}`}\n                  onClick={handleDrawerToggle}\n                  style={{ textDecoration: 'none' }}\n                >\n                  <Card sx={{ mx: 2, mb: 3 }} elevation={3}>\n                    <CardLeftContent>\n                      <Box display=\"flex\">\n                        <Icon className=\"icon\" color={notification.icon.color}>\n                          {notification.icon.name}\n                        </Icon>\n                        <Heading>{notification.heading}</Heading>\n                      </Box>\n                      <Small className=\"messageTime\">\n                        {getTimeDifference(new Date(notification.timestamp))}\n                        ago\n                      </Small>\n                    </CardLeftContent>\n                    <Box sx={{ px: 2, pt: 1, pb: 2 }}>\n                      <Paragraph sx={{ m: 0 }}>{notification.title}</Paragraph>\n                      <Small sx={{ color: secondary }}>{notification.subtitle}</Small>\n                    </Box>\n                  </Card>\n                </Link>\n              </NotificationCard>\n            ))}\n            {!!notifications?.length && (\n              <Box sx={{ color: secondary }}>\n                <Button onClick={clearNotifications}>Clear Notifications</Button>\n              </Box>\n            )}\n          </Box>\n        </Drawer>\n      </ThemeProvider>\n    </Fragment>\n  );\n};\n\nexport default NotificationBar;\n","import { useEffect, useRef, memo } from 'react';\nimport { ThemeProvider, useMediaQuery, Box, styled, useTheme } from '@mui/material';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport { Outlet } from 'react-router-dom';\nimport { MatxSuspense } from 'app/components';\nimport useSettings from 'app/hooks/useSettings';\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant';\nimport Footer from '../../Footer';\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme';\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar';\nimport Layout1Sidenav from './Layout1Sidenav';\nimport Layout1Topbar from './Layout1Topbar';\n\nconst Layout1Root = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  background: theme.palette.background.default\n}));\n\nconst ContentBox = styled(Box)(() => ({\n  height: '100%',\n  display: 'flex',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  flexDirection: 'column',\n  justifyContent: 'space-between'\n}));\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n  height: '100%',\n  position: 'relative',\n  display: 'flex',\n  flexGrow: '1',\n  flexDirection: 'column'\n}));\n\nconst LayoutContainer = styled(Box)(({ width, open }) => ({\n  height: '100vh',\n  display: 'flex',\n  flexGrow: '1',\n  flexDirection: 'column',\n  verticalAlign: 'top',\n  marginLeft: width,\n  position: 'relative',\n  overflow: 'hidden',\n  transition: 'all 0.3s ease',\n  marginRight: open ? 50 : 0\n}));\n\nconst Layout1 = () => {\n  const { settings, updateSettings } = useSettings();\n  const { layout1Settings, secondarySidebar } = settings;\n  const topbarTheme = settings.themes[layout1Settings.topbar.theme];\n  const {\n    leftSidebar: { mode: sidenavMode, show: showSidenav }\n  } = layout1Settings;\n\n  const getSidenavWidth = () => {\n    switch (sidenavMode) {\n      case 'full':\n        return sideNavWidth;\n\n      case 'compact':\n        return sidenavCompactWidth;\n\n      default:\n        return '0px';\n    }\n  };\n\n  const sidenavWidth = getSidenavWidth();\n  const theme = useTheme();\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const ref = useRef({ isMdScreen, settings });\n  const layoutClasses = `theme-${theme.palette.type}`;\n\n  useEffect(() => {\n    let { settings } = ref.current;\n    let sidebarMode = settings.layout1Settings.leftSidebar.mode;\n    if (settings.layout1Settings.leftSidebar.show) {\n      let mode = isMdScreen ? 'close' : sidebarMode;\n      updateSettings({ layout1Settings: { leftSidebar: { mode } } });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isMdScreen]);\n\n  return (\n    <Layout1Root className={layoutClasses}>\n      {showSidenav && sidenavMode !== 'close' && (\n        <SidenavTheme>\n          <Layout1Sidenav />\n        </SidenavTheme>\n      )}\n\n      <LayoutContainer width={sidenavWidth} open={secondarySidebar.open}>\n        {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n          <ThemeProvider theme={topbarTheme}>\n            <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n          </ThemeProvider>\n        )}\n\n        {settings.perfectScrollbar && (\n          <StyledScrollBar>\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\n              <ThemeProvider theme={topbarTheme}>\n                <Layout1Topbar />\n              </ThemeProvider>\n            )}\n            <Box flexGrow={1} position=\"relative\">\n              <MatxSuspense>\n                <Outlet />\n              </MatxSuspense>\n            </Box>\n\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\n          </StyledScrollBar>\n        )}\n\n        {!settings.perfectScrollbar && (\n          <ContentBox>\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\n              <ThemeProvider theme={topbarTheme}>\n                <Layout1Topbar />\n              </ThemeProvider>\n            )}\n\n            <Box flexGrow={1} position=\"relative\">\n              <MatxSuspense>\n                <Outlet />\n              </MatxSuspense>\n            </Box>\n\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\n          </ContentBox>\n        )}\n\n        {settings.footer.show && settings.footer.fixed && <Footer />}\n      </LayoutContainer>\n\n      {/* {settings.secondarySidebar.show && <SecondarySidebar />} */}\n    </Layout1Root>\n  );\n};\n\nexport default memo(Layout1);\n","import { differenceInSeconds } from 'date-fns';\n\nexport const convertHexToRGB = (hex) => {\n  // check if it's a rgba\n  if (hex.match('rgba')) {\n    let triplet = hex.slice(5).split(',').slice(0, -1).join(',');\n    return triplet;\n  }\n\n  let c;\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    c = hex.substring(1).split('');\n    if (c.length === 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n    }\n    c = '0x' + c.join('');\n\n    return [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',');\n  }\n};\n\nexport function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n      args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }, wait);\n    if (immediate && !timeout) func.apply(context, args);\n  };\n}\n\nexport function isMobile() {\n  if (window) return window.matchMedia(`(max-width: 767px)`).matches;\n\n  return false;\n}\n\nexport function isMdScreen() {\n  if (window) return window.matchMedia(`(max-width: 1199px)`).matches;\n\n  return false;\n}\n\nfunction currentYPosition(elm) {\n  if (!window && !elm) {\n    return;\n  }\n  if (elm) return elm.scrollTop;\n  // Firefox, Chrome, Opera, Safari\n  if (window.pageYOffset) return window.pageYOffset;\n  // Internet Explorer 6 - standards mode\n  if (document.documentElement && document.documentElement.scrollTop)\n    return document.documentElement.scrollTop;\n  // Internet Explorer 6, 7 and 8\n  if (document.body.scrollTop) return document.body.scrollTop;\n  return 0;\n}\n\nfunction elmYPosition(elm) {\n  var y = elm.offsetTop;\n  var node = elm;\n  while (node.offsetParent && node.offsetParent !== document.body) {\n    node = node.offsetParent;\n    y += node.offsetTop;\n  }\n  return y;\n}\n\nexport function scrollTo(scrollableElement, elmID) {\n  var elm = document.getElementById(elmID);\n\n  if (!elmID || !elm) {\n    return;\n  }\n\n  var startY = currentYPosition(scrollableElement);\n  var stopY = elmYPosition(elm);\n\n  var distance = stopY > startY ? stopY - startY : startY - stopY;\n  if (distance < 100) {\n    scrollTo(0, stopY);\n    return;\n  }\n  var speed = Math.round(distance / 50);\n  if (speed >= 20) speed = 20;\n  var step = Math.round(distance / 25);\n  var leapY = stopY > startY ? startY + step : startY - step;\n  var timer = 0;\n  if (stopY > startY) {\n    for (var i = startY; i < stopY; i += step) {\n      setTimeout(\n        (function (leapY) {\n          return () => {\n            scrollableElement.scrollTo(0, leapY);\n          };\n        })(leapY),\n        timer * speed\n      );\n      leapY += step;\n      if (leapY > stopY) leapY = stopY;\n      timer++;\n    }\n    return;\n  }\n  for (let i = startY; i > stopY; i -= step) {\n    setTimeout(\n      (function (leapY) {\n        return () => {\n          scrollableElement.scrollTo(0, leapY);\n        };\n      })(leapY),\n      timer * speed\n    );\n    leapY -= step;\n    if (leapY < stopY) leapY = stopY;\n    timer++;\n  }\n  return false;\n}\n\nexport function getTimeDifference(date) {\n  let difference = differenceInSeconds(new Date(), date);\n\n  if (difference < 60) return `${Math.floor(difference)} sec`;\n  else if (difference < 3600) return `${Math.floor(difference / 60)} min`;\n  else if (difference < 86400) return `${Math.floor(difference / 3660)} h`;\n  else if (difference < 86400 * 30) return `${Math.floor(difference / 86400)} d`;\n  else if (difference < 86400 * 30 * 12) return `${Math.floor(difference / 86400 / 30)} mon`;\n  else return `${(difference / 86400 / 30 / 12).toFixed(1)} y`;\n}\n"],"names":["styled","Toolbar","display","alignItems","minHeight","topBarHeight","width","padding","flexDirection","margin","maxWidth","theme","useTheme","settings","useSettings","themes","footer","children","sidenavTheme","layout1Settings","leftSidebar","Badge","top","right","height","borderRadius","Span","fontWeight","fontSize","cursor","marginBottom","letterSpacing","transform","color","palette","secondary","main","backgroundColor","primary","dark","contrastText","zIndex","position","paddingBottom","boxShadow","themeShadows","background","default","BadgeSelected","marginTop","justifyContent","Scrollbar","paddingLeft","paddingRight","Box","sideNavWidth","marginLeft","transition","flexGrow","whiteSpace","overflow","textOverflow","bottom","shadows","text","marginRight","props","BrandRoot","mode","src","logo","style","navigations","name","path","icon","label","type","iconText","IconAndTextColor","StyledScrollBar","overflowY","SideNavMobile","left","breakpoints","up","updateSettings","Fragment","options","suppressScrollX","items","onClick","sidebarSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","updateSidebarMode","SidebarNavRoot","bg","image","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","NavListBox","Layout1Sidenav","bgImgURL","primaryRGB","convertHexToRGB","sidenavCompactWidth","Hidden","smDown","Switch","onChange","checked","size","memo","StyledIconButton","opacity","IconButton","TopbarRoot","TopbarContainer","down","UserMenu","StyledItem","MenuItem","minWidth","textDecoration","IconBox","Layout1Topbar","useAuth","logout","isMdScreen","user","useMediaQuery","menuButton","xsDown","Avatar","sx","to","Layout1Root","ContentBox","overflowX","LayoutContainer","verticalAlign","open","Layout1","secondarySidebar","topbarTheme","topbar","sidenavMode","showSidenav","show","sidenavWidth","getSidenavWidth","ref","useRef","layoutClasses","useEffect","current","sidebarMode","className","fixed","perfectScrollbar","hex","c","match","slice","split","join","test","substring","length"],"sourceRoot":""}