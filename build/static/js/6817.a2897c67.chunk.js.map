{"version":3,"file":"static/js/6817.a2897c67.chunk.js","mappings":"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","sources":["app/form/AddBannerForm.js","app/views/banner/AddBanner.js"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, FieldArray } from \"formik\";\nimport { Grid, Box, Button, Divider } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { json } from \"react-router-dom\";\nimport { values } from \"lodash\";\n\nconst AddBannerForm = () => {\n  const [description, setDescription] = useState(\"\");\n  const [file, setFile] = useState(null);\n\n  const [bannerArray, setBannerArray] = useState(\n    JSON.parse(String(localStorage.getItem(\"editBanner\"))) || null\n  );\n\n  var formData = new FormData();\n\n  useEffect(() => {});\n\n  const handleFormSubmit = (values, index) => {\n    formData.append(\"description\", values.description);\n    formData.append(\"url\",  values.url);\n    if(file){\n      formData.append(\"image\", file);\n    }\n\n\n    if (bannerArray) {\n      formData.append(\"id\", bannerArray.id);\n      formData.append(\"status\", 1);\n    }\n\n    console.log('formData', formData.get('image'))\n\n    const config = {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: formData,\n    };\n\n    // console.log(\"bannerID\",bannerArray.id);\n\n    // if (bannerArray) {\n    //   fetch(\n    //     \"https://loofer.bellazza.in/api/admin/banners/\" + bannerArray.id,\n    //     config\n    //   )\n    //     .then((res) => {\n    //       console.log(res);\n\n    //       if (res.status == 201) {\n    //         Swal.fire({\n    //           title: \"Banner Update\",\n    //           text: \"You can close this window\",\n    //           icon: \"success\",\n    //         });\n    //         localStorage.removeItem(\"editBanner\");\n    //       } else {\n    //         Swal.fire({\n    //           title: \"Banner Status\",\n    //           text: \"You are not authorized as admin\",\n    //           icon: \"error\",\n    //         });\n    //       }\n    //     })\n    //     .catch((err) => {\n    //       if (err) {\n    //         Swal.fire({\n    //           title: \"Banner Status\",\n    //           text: err?.message,\n    //           icon: \"error\",\n    //         });\n    //       }\n    //       console.error({ err });\n    //     });\n    // } else {\n      fetch(\"https://loofer.bellazza.in/api/admin/banners\",config)\n        .then((res) => {\n          console.log(res);\n\n          if (res.status == 201) {\n            Swal.fire({\n              title: \"Banner Saved\",\n              text: \"You can close this window\",\n              icon: \"success\",\n            });\n            window.location.href=\"/dashboard/bannerlist\"\n          } else {\n            Swal.fire({\n              title: \"Banner Status\",\n              text: \"You are not authorized as admin\",\n              icon: \"error\",\n            });\n          }\n        })\n        .catch((err) => {\n          if (err) {\n            Swal.fire({\n              title: \"Banner Status\",\n              text: err?.message,\n              icon: \"error\",\n            });\n          }\n          console.error({ err });\n        });\n      // }\n  };\n  const fileInputRef = React.createRef();\n  const fileChange = async (event) => {\n    event.preventDefault();\n\n    const fileToUpload = event.target.files[0];\n    console.log(\"fileToUpload\", fileToUpload)\n    setFile(fileToUpload)\n   \n\n    //  setCoverPath(URL.createObjectURL(fileToUpload[0]));\n    // const response = await convertImage(URL.createObjectURL(fileToUpload[0]));\n    // setUploadCover(`data:${fileToUpload['0'].type};base64,` + response);\n\n    // formData.append(\"image\", fileToUpload);\n     setDescription(fileToUpload?.name)\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        image: \"\",\n        description: bannerArray?.description || \"\",\n        url:\"\"\n      }}\n      onSubmit={(e) => {\n        handleFormSubmit(e);\n      }}\n    >\n      {(formik) => {\n        const { errors, setFieldValue } = formik;\n        return (\n          <Form>\n            <Box style={{ padding: 10 }}>\n              <Box\n                style={{\n                  boxShadow:\n                    \"rgba(0, 0, 0, 0.06) 0px 3px 3px -2px, rgba(0, 0, 0, 0.04) 0px 3px 4px 0px, rgba(0, 0, 0, 0.04) 0px 1px 8px 0px\",\n                  padding: 30,\n                  background: \"white\",\n                }}\n              >\n                <h2>Add New Banner</h2>\n                <Divider style={{ marginTop: 20, marginBottom: 20 }} />\n                <Grid container style={{ padding: 10 }} spacing={4}>\n                  <Grid item xs={12} lg={6}>\n                    <Box\n                      mt={1}\n                      mb={1}\n                      sx={{\n                        border: \"1px dashed #E61855\",\n                        background: \"#FDF5F7\",\n                        borderRadius: 5,\n                        \"& .MuiInput-underline:before\": {\n                          borderBottom: \"none\",\n                        },\n                      }}\n                      // className={classes.upload}\n                      onClick={() => fileInputRef.current.click()}\n                    >\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                        style={{\n                          padding: 62,\n                        }}\n                      >\n                        <Box display=\"flex\" justifyContent=\"space-between\">\n                          <span\n                            one\n                            style={{\n                              color: \"rgba(0, 50, 91, 0.5)\",\n                              fontWeight: 600,\n                            }}\n                          >\n                            {description? description:\"Drag and drop or\"}\n                            \n                          </span>\n                          <span\n                            style={{\n                              color: \"#E61855\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Browse\n                          </span>\n                        </Box>\n                      </Box>\n                      <input\n                        ref={fileInputRef}\n                        type=\"file\"\n                        accept=\"image/*\"\n                        hidden\n                        onChange={fileChange}\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"description\"\n                      type=\"text\"\n                      placeholder=\"Description\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.description\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.description ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.description}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"url\"\n                      type=\"text\"\n                      placeholder=\"https:// or http://\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.url\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.url ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.url}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={3}>\n                    <Button\n                      type=\"submit\"\n                      style={{\n                        background: \"red\",\n                        color: \"white\",\n                        marginTop: 30,\n                        // padding: 16,\n                        borderRadius: 5,\n                        width: \"100%\",\n                      }}\n                    >\n                      Upload\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Box>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default AddBannerForm;\n","import AddBannerForm from 'app/form/AddBannerForm';\nimport React from 'react';\n\nconst AddBanner = () => {\n\treturn (\n\t\t<div>\n\t\t\t<AddBannerForm />\n\t\t</div>\n\t);\n};\n\nexport default AddBanner;\n"],"names":["useState","description","setDescription","file","setFile","JSON","parse","String","localStorage","getItem","bannerArray","formData","FormData","useEffect","fileInputRef","React","fileChange","event","preventDefault","fileToUpload","target","files","console","log","name","initialValues","image","url","onSubmit","e","values","index","append","id","get","config","method","headers","Authorization","body","fetch","then","res","status","Swal","title","text","icon","window","location","href","catch","err","message","error","handleFormSubmit","formik","errors","setFieldValue","Box","style","padding","boxShadow","background","Divider","marginTop","marginBottom","Grid","container","spacing","item","xs","lg","mt","mb","sx","border","borderRadius","borderBottom","onClick","current","click","display","alignItems","justifyContent","one","color","fontWeight","marginLeft","ref","type","accept","hidden","onChange","placeholder","width","inputProps","fontSize","Button"],"sourceRoot":""}