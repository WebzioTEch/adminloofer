{"version":3,"file":"static/js/2499.3aae8926.chunk.js","mappings":"sRAujBA,IA3iBoB,WAClB,IAAMA,GAAUC,EAAAA,EAAAA,MAEhB,IADiBC,EAAAA,EAAAA,OACuBC,EAAAA,EAAAA,UAAS,OAAjD,eACA,GADA,WACkCA,EAAAA,EAAAA,UAChCC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAAsB,KAD/D,eAAOC,EAAP,KAAkBC,EAAlB,KAIA,IADcC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAtB,KACEX,EAAAA,EAAAA,UAAS,OAArC,eAAOY,EAAP,KAAYC,EAAZ,KACA,GAAoCb,EAAAA,EAAAA,UAAS,IAA7C,eAAOc,EAAP,KAAmBC,EAAnB,KAEA,GAA4Cf,EAAAA,EAAAA,UAAS,IAArD,eAAOgB,EAAP,KAAuBC,EAAvB,KACA,GAAgCjB,EAAAA,EAAAA,UAAS,CACvCkB,KAAM,GACNC,aAAc,GACdC,YAAa,GACbC,IAAK,GACLC,MAAO,GACPC,YAAa,GACbC,SAAU,GACVC,YAAa,GACbC,eAAgB,OATlB,eAWA,GAXA,WAWqC1B,EAAAA,EAAAA,UACtCC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,mBAAmB,KADzD,0BAeAsB,EAAAA,EAAAA,YAAU,WAEPC,GACF,IAIF,IAAMC,EAAmB,SAACC,EAAQC,GAEjBC,YAAW,WACvBf,EAAkB,GACnB,GAAE,KACH,IAEEgB,QAAQC,IAAItB,EAAK,OACjB,IAAMuB,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQP,EAAOZ,MAC/BiB,EAASE,OAAO,eAAgB,GAChCF,EAASE,OAAO,cAAeP,EAAOV,aACtCe,EAASE,OAAO,QAASP,EAAOR,OAChCa,EAASE,OAAO,cAAeP,EAAOP,aACtCY,EAASE,OAAO,gBAAiBP,EAAOL,aAExCU,EAASE,OAAO,iBAAkBzB,GAClCuB,EAASE,OAAO,QAASP,EAAOQ,OAChCH,EAASE,OAAO,OAAQ,KAExBF,EAASE,OAAO,uBAAwBP,EAAOS,MAI/C,IAAMC,EAAS,CAEbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,aAAaC,QAAQ,YAKlDsC,EAAAA,GAAAA,KACI,sDACAR,EACAK,GAEDI,MAAK,SAACC,GACU,KAAZA,EAAIC,QACL7B,EAAkB,8BAClB8B,IAAAA,KAAU,CACRC,MAAO,iBACPC,KAAM,6BACNC,KAAM,YAENlB,YAAW,WACTnC,EAAS,yBACV,GAAE,MAGLkD,IAAAA,KAAU,CACRC,MAAO,iBACPC,KAAM,kCACNC,KAAM,UAKVjB,QAAQC,IAAI,CAAEW,IAAAA,GACf,IACAM,OAAM,SAACC,GACNnB,QAAQoB,MAAM,CAAED,IAAAA,GACjB,GAGJ,CAAC,MAAOC,GACPpB,QAAQoB,MAAM,SAAUA,EACzB,CACD,EAiBIzB,GAfmB0B,EAAAA,GAAW,CAElCpC,KAAMoC,EAAAA,KAAaC,SAAS,oBAC5BpC,aAAcmC,EAAAA,KAAaC,SAAS,4BACpCnC,YAAakC,EAAAA,KAAaC,SAAS,2BACnClC,IAAKiC,EAAAA,KAAaC,SAAS,mBAC3BC,SAAUF,EAAAA,KAAaC,SAAS,wBAChCjC,MAAOgC,EAAAA,KAAaC,SAAS,qBAC7BhC,YAAa+B,EAAAA,KAAaC,SAAS,2BACnC/B,SAAU8B,EAAAA,KAAaC,SAAS,wBAChC9B,YAAa6B,EAAAA,KAAaC,SAAS,6BAKnB,WAChB,IAAMf,EAAS,CACbC,QAAS,CACP,eAAgB,oCAChBC,cAAc,UAAD,OAAYtC,aAAaC,QAAQ,YAIpDoD,MAAM,kDAAmDjB,GACtDI,MAAK,SAACc,GAAD,OAAcA,EAASC,MAAvB,IACLf,MAAK,SAACC,GACLZ,QAAQC,IAAIW,EAAK,cACjB,IAAIe,EAAU,GACVf,GACFA,EAAIgB,KAAI,SAACC,GACPF,EAAQG,KAAKD,EACd,IACDvD,EAAaqD,GAEb3B,QAAQC,IAAI,CAAEW,IAAAA,KAEdE,IAAAA,KAAU,CACRC,MAAO,kBACPC,KAAM,kCACNC,KAAM,SAGX,IACAC,OAAM,SAACC,GACNnB,QAAQoB,MAAM,CAAED,IAAAA,GACjB,IAGDK,MAAM,0DAA2DjB,GAChEI,MAAK,SAACc,GAAD,OAAcA,EAASC,MAAvB,IACLf,MAAK,SAACC,GACLZ,QAAQC,IAAIW,EAAK,cACjB,IAAIe,EAAU,GACVf,GACFA,EAAImB,KAAKH,KAAI,SAACC,GACE,SAAR,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKG,OACNL,EAAQG,KAAKD,EAGhB,IACD/C,EAAc6C,GAEd3B,QAAQC,IAAI,CAAEW,IAAAA,KAEdE,IAAAA,KAAU,CACRC,MAAO,mBACPC,KAAM,kCACNC,KAAM,SAGX,IACAC,OAAM,SAACC,GACNnB,QAAQoB,MAAM,CAAED,IAAAA,GACjB,GACJ,GAED,OADAnB,QAAQC,IAAI,YAAa5B,IAEvB,SAAC,KAAD,CACE4D,cAAe,CAEbhD,KAAM,GACNC,aAAc,GACdC,YAAa,GACbkB,MAAO,GACPC,KAAM,GAENiB,SAAU,GACVlC,MAAO,GACPC,YAAa,GACbC,SAAU,GACVC,YAAa,GACbC,eAAgB,MAGlByC,SAAU,SAACC,GAET,IAAK,IAAIrC,EAAQ,EAAGA,EAAQ,EAAGA,IAE7BF,EAAiBuC,EAEpB,EAvBH,SAyBG,SAACC,GACA,IAAQC,EAA0BD,EAA1BC,OAA0BD,EAAlBE,cAChB,OACE,SAAC,KAAD,CAAMC,QAAQ,sBAAd,UACE,SAAC,IAAD,CAAKC,MAAO,CAAEC,QAAS,IAAvB,UACE,UAAC,IAAD,CACED,MAAO,CACLE,UACE,iHACFD,QAAS,GACTE,WAAY,SALhB,WAQE,6CACA,SAAC,IAAD,CAASH,MAAO,CAAEI,UAAW,GAAIC,aAAc,OAC/C,UAAC,KAAD,CAAMC,WAAS,EAACN,MAAO,CAAEC,QAAS,IAAMM,QAAS,EAAjD,UACGhE,IACC,gBAAKyD,MAAO,CAAEQ,MAAO,QAASH,aAAc,IAA5C,SACG9D,KAGL,UAAC,KAAD,CAAMkE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,OACL+C,KAAK,OACLoB,YAAY,OACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAc,OAANlB,QAAM,IAANA,GAAAA,EAAQpD,KAAO,gBAAkB,YACzC2D,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,mBACA,SAAC,KAAD,CACExD,KAAK,OACLwE,UAAU,MACVjB,MAAO,CAAEQ,MAAO,MAAOU,SAAU,UAGrC,UAAC,KAAD,CAAMT,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,eACL+C,KAAK,OACLoB,YAAY,eACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAc,OAANlB,QAAM,IAANA,GAAAA,EAAQnD,aACZ,gBACA,YACJ0D,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,mBACA,SAAC,KAAD,CACExD,KAAK,eACLwE,UAAU,MACVjB,MAAO,CAAEQ,MAAO,MAAOU,SAAU,UAGrC,UAAC,KAAD,CAAMT,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,cACL0E,GAAG,WACHC,KAAK,KACL5B,KAAK,OACLoB,YAAY,cACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAc,OAANlB,QAAM,IAANA,GAAAA,EAAQlD,YACZ,gBACA,YACJyD,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,mBACA,SAAC,KAAD,CACExD,KAAK,cACLwE,UAAU,MACVjB,MAAO,CAAEQ,MAAO,MAAOU,SAAU,UAGrC,UAAC,KAAD,CAAMT,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,QACL+C,KAAK,OACLoB,YAAY,QACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAc,OAANlB,QAAM,IAANA,GAAAA,EAAQhC,MAAQ,gBAAkB,YAC1CuC,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,mBACA,SAAC,KAAD,CACExD,KAAK,QACLwE,UAAU,MACVjB,MAAO,CAAEQ,MAAO,MAAOU,SAAU,SAGpC1D,QAAQC,IAAI,aAAcpB,IAC3B,UAAC,KAAD,CAAMoE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,UAAC,KAAD,CACElE,KAAK,OACL0E,GAAG,SACHnB,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAc,OAANlB,QAAM,IAANA,GAAAA,EAAQ/B,KACZ,gBACA,YACJsC,UAAW,IAVf,WAaA,mBAAQiB,MAAM,KAMXhF,EAAW+C,KAAI,SAACA,GAEf,OAAO,mBAAQiC,MAAK,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAKkC,GAApB,gBAAyBlC,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAK3C,MAEtC,QAQH,mBACA,SAAC,KAAD,CACEA,KAAK,cACLwE,UAAU,MACVjB,MAAO,CAAEQ,MAAO,MAAOU,SAAU,UA4BrC,UAAC,KAAD,CAAMT,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,QACL+C,KAAK,OACLoB,YAAY,QACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAc,OAANlB,QAAM,IAANA,GAAAA,EAAQhD,MAAQ,gBAAkB,YAC1CuD,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,mBACA,SAAC,KAAD,CACExD,KAAK,QACLwE,UAAU,MACVjB,MAAO,CAAEQ,MAAO,MAAOU,SAAU,UAGrC,UAAC,KAAD,CAAMT,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,cACL+C,KAAK,OACLoB,YAAY,aACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAc,OAANlB,QAAM,IAANA,GAAAA,EAAQ/C,YACZ,gBACA,YACJsD,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,mBACA,SAAC,KAAD,CACExD,KAAK,cACLwE,UAAU,MACVjB,MAAO,CAAEQ,MAAO,MAAOU,SAAU,SAE7B,KACR,UAAC,KAAD,CAAMT,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,WACL+C,KAAK,OACLoB,YAAY,WACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAc,OAANlB,QAAM,IAANA,GAAAA,EAAQ9C,SACZ,gBACA,YACJqD,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,mBACA,SAAC,KAAD,CACExD,KAAK,WACLwE,UAAU,MACVjB,MAAO,CAAEQ,MAAO,MAAOU,SAAU,UAGrC,UAAC,KAAD,CAAMT,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,UAAC,KAAD,CACElE,KAAK,cACL0E,GAAG,SACHnB,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAc,OAANlB,QAAM,IAANA,GAAAA,EAAQ7C,YACZ,gBACA,YACJoD,UAAW,IAVf,WAaE,mBAAQiB,MAAM,GAAd,oBACCxF,EAAUuD,KAAI,SAACA,GAAO,IAAD,EACpB,OAAQ,oBAAQiC,MAAOjC,EAAIkC,GAAnB,UAAwBlC,EAAI3C,KAA5B,YAAoC2C,QAApC,IAAoCA,GAApC,UAAoCA,EAAKmC,cAAzC,aAAoC,EAAa9E,KAAjD,MACT,QAKH,mBACA,SAAC,KAAD,CACEA,KAAK,cACLwE,UAAU,MACVjB,MAAO,CAAEQ,MAAO,MAAOU,SAAU,UAGrC,UAAC,KAAD,CAAMT,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,kBACElE,KAAK,iBACL+C,KAAK,OACL6B,WAAOG,EAEPC,SAAU,SAACC,GACTtF,EAAasF,EAAMC,OAAOC,MAAM,GACjC,KAYH,mBACA,SAAC,KAAD,CACEnF,KAAK,iBACLwE,UAAU,MACVjB,MAAO,CAAEQ,MAAO,MAAOU,SAAU,UAGrC,SAAC,KAAD,CAAMT,MAAI,EAACC,GAAI,GAAIC,GAAI,KACvB,SAAC,KAAD,CAAMF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,SAAC,IAAD,CACEnB,KAAK,SACLQ,MAAO,CACLG,WAAY,MACZK,MAAO,QACPJ,UAAW,GACXU,aAAc,EACdD,MAAO,QAPX,6BAkBb,GAGJ,C,iQC9OD,EArT2B,WACzB,OAAkCtF,EAAAA,EAAAA,UAChCC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAAsB,IAD/D,eAAOC,EAAP,KAAkBC,EAAlB,KAGA,GAAwCP,EAAAA,EAAAA,YAAxC,eACMsG,GADN,WACiBvG,EAAAA,EAAAA,QACjB4B,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAEH,IAAMC,EAAmB,SAACC,EAAQC,GAChC,IAAMI,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQP,EAAOZ,MAC/BiB,EAASE,OAAO,OAAQP,EAAOyE,MAC/BpE,EAASE,OAAO,cAAeP,EAAOV,aACtCe,EAASE,OAAO,YAAaP,EAAO0E,WACpCrE,EAASE,OAAO,QAASP,EAAO2E,OAChCtE,EAASE,OAAO,gBAAiBP,EAAO4E,eAExCJ,GAASK,EAAAA,EAAAA,IAAuBxE,IAChCF,QAAQC,IAAI,iBAAiBJ,EAC9B,EAGK8E,EAAmBtD,EAAAA,KAAauD,MAAM,CAC1C3F,KAAMoC,EAAAA,KAAaC,SAAS,oBAC5BgD,KAAMjD,EAAAA,KAAaC,SAAS,oBAC5BnC,YAAakC,EAAAA,KAAaC,SAAS,2BACnCiD,UAAWlD,EAAAA,KAAaC,SAAS,yBACjCkD,MAAOnD,EAAAA,KAAaC,SAAS,2BAIzB3B,EAAY,WACd,IAAMY,EAAS,CACbC,QAAS,CACPqE,OAAQ,mBACR,eAAgB,oCAChBpE,cAAc,UAAD,OAAYtC,aAAaC,QAAQ,YAIpDoD,MAAM,kDAAmDjB,GACtDI,MAAK,SAACc,GAAD,OAAcA,EAASC,MAAvB,IACLf,MAAK,SAACC,GACLZ,QAAQC,IAAIW,EAAK,cACjB,IAAIe,EAAU,GACVf,GACFA,EAAIgB,KAAI,SAACC,GACPF,EAAQG,KAAKD,EACd,IACDvD,EAAaqD,GAEb3B,QAAQC,IAAI,CAAEW,IAAAA,KAGdE,IAAAA,KAAU,CACRC,MAAO,kBACPC,KAAM,kCACNC,KAAM,SAGX,IACAC,OAAM,SAACC,GACNnB,QAAQoB,MAAM,CAAED,IAAAA,GACjB,GACJ,EAGD,OACE,SAAC,KAAD,CACEc,cAAe,CACbhD,KAAM,GACNqF,KAAM,GACNnF,YAAa,GACboF,UAAW,GACXC,MAAO,GACPC,cAAe,KAEjBvC,SAAU,SAACC,GAET,IAAK,IAAIrC,EAAQ,EAAGA,EAAQ,EAAGA,IAE7BF,EAAiBuC,EAEpB,EACDwC,iBAAkBA,EAhBpB,SAkBG,SAACvC,GACA,IAAQC,EAAWD,EAAXC,OACR,OACE,SAAC,KAAD,WACE,SAACyC,EAAA,EAAD,CAAKtC,MAAO,CAAEC,QAAS,IAAvB,UACE,UAACqC,EAAA,EAAD,CACEtC,MAAO,CACLE,UACE,iHACFD,QAAS,GACTE,WAAY,SALhB,WAQE,8CACA,SAACoC,EAAA,EAAD,CAASvC,MAAO,CAAEI,UAAW,GAAIC,aAAc,OAC/C,UAACmC,EAAA,GAAD,CAAMlC,WAAS,EAACN,MAAO,CAAEC,QAAS,IAAMM,QAAS,EAAjD,WACE,UAACiC,EAAA,GAAD,CAAM/B,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,OACL+C,KAAK,OACLoB,YAAY,OACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAQlB,EAAOpD,KAAO,gBAAkB,YACxC2D,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,kBACCJ,EAAOpD,MACN,iBAAMuD,MAAO,CAAEQ,MAAO,MAAOU,SAAU,IAAvC,SACGrB,EAAOpD,OAER,SAEN,UAAC+F,EAAA,GAAD,CAAM/B,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,OACL+C,KAAK,OACLoB,YAAY,OACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAQlB,EAAOiC,KAAO,gBAAkB,YACxC1B,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,kBACCJ,EAAOiC,MACN,iBAAM9B,MAAO,CAAEQ,MAAO,MAAOU,SAAU,IAAvC,SACGrB,EAAOiC,OAER,SAEN,UAACU,EAAA,GAAD,CAAM/B,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,cACL+C,KAAK,OACLoB,YAAY,cACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAQlB,EAAOlD,YACX,gBACA,YACJyD,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,kBACCJ,EAAOlD,aACN,iBAAMqD,MAAO,CAAEQ,MAAO,MAAOU,SAAU,IAAvC,SACGrB,EAAOlD,cAER,SA2BN,UAAC6F,EAAA,GAAD,CAAM/B,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC8B,EAAA,EAAD,CAAYC,QAAQ,YAApB,wBACA,SAAC,KAAD,CACEvB,GAAIwB,EAAAA,EACJ3C,MAAO,CACLC,QAAS,EACTY,MAAO,OACPC,aAAc,EACdC,OAAQlB,EAAOlD,YACX,gBACA,YACJyD,UAAW,GAEb3D,KAAK,YACLmG,MAAM,YACNhE,QAAOiB,EAAOkC,UACdc,YAAY,SAAC,KAAD,CAAcpG,KAAK,cAdjC,SAkBGZ,EAAUuD,KAAI,SAAA0D,GACb,OAAS,SAACC,EAAA,EAAD,CAAU1B,MAAOyB,EAAMxB,GAAvB,UACT,wBAAKwB,EAAMrG,QAGZ,UAGL,UAAC+F,EAAA,GAAD,CAAM/B,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,gBACL+C,KAAK,OACLoB,YAAY,iBACZZ,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAQlB,EAAOoC,cACX,gBACA,YACJ7B,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,kBACCJ,EAAOoC,eACN,iBAAMjC,MAAO,CAAEQ,MAAO,MAAOU,SAAU,IAAvC,SACGrB,EAAOoC,gBAER,SAEN,UAACO,EAAA,GAAD,CAAM/B,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAAC,KAAD,CACElE,KAAK,QACL4E,WAAOG,EACPhC,KAAK,OACLoB,YAAY,QACZa,SAAU,SAACC,GAET9B,EAAOE,cACL,QACA4B,EAAMsB,cAAcpB,MAAM,GAE7B,EACD5B,MAAO,CACLC,QAAS,GACTY,MAAO,OACPC,aAAc,EACdC,OAAQlB,EAAOmC,MAAQ,gBAAkB,YACzC5B,UAAW,IAEbY,WAAY,CACVhB,MAAO,CAAEC,QAAS,QAGtB,kBACCJ,EAAOmC,OACN,iBAAMhC,MAAO,CAAEQ,MAAO,MAAOU,SAAU,IAAvC,SACGrB,EAAOmC,QAER,SAEN,SAACQ,EAAA,GAAD,CAAM/B,MAAI,EAACC,GAAI,GAAIC,GAAI,KACvB,SAAC6B,EAAA,GAAD,CAAM/B,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACsC,EAAA,EAAD,CACEzD,KAAK,SACLQ,MAAO,CACLkD,gBAAiB,MACjB1C,MAAO,QACPJ,UAAW,GAEXU,aAAc,EACdD,MAAO,QARX,6BAmBb,GAGN,ECzTD,EARuB,WACtB,OACC,0BACC,SAAC,EAAD,KAGF,C","sources":["app/form/ProfileForm.js","app/form/AddSubCategoryForm.js","app/views/category/AddSubCategory.js"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Grid, Box, Button, Divider } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { createproductDispatch } from \"reducers/HomeReducer\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst ProfileForm = () => {\n  const Navigate =useNavigate();\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [dataArray, setDataArray] = useState(\n    JSON.parse(String(localStorage.getItem(\"category_list\"))) || []\n  );\n  const token = useSelector((state) => state.home.token);\n  const [img, setImageData] = useState(null);\n  const [attributes, setAttributes] = useState([]);\n\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    product_type: \"\",\n    description: \"\",\n    sku: \"\",\n    price: \"\",\n    offer_price: \"\",\n    quantity: \"\",\n    category_id: \"\",\n    features_image: null,\n  });\n  const [productArray,setProductArray]=useState(\n\tJSON.parse(String(localStorage.getItem(\"product_list\")))||[]\n  );\n\n  // const onImageChange = e => {\n  // \tconst formData = new FormData({});\n\n  // \tif (e.target && e.target.files[0]) {\n  // \t  formData.append('features_image', e.target.files[0])\n  // \t  // for (const value of formData.values()) {\n  // \t  setImageData(formData)\n  // \t  // }\n  // \t}\n  //   }\n\n  useEffect(() => {\n   \n     fetchData()\n  })\n  \n\n//   const handleFormSubmit = (values, { resetForm }) => {\n\tconst handleFormSubmit = (values, index) => {\n\t\n    const timer = setTimeout(() => {\n      setSuccessMessage(\"\");\n    }, 2000);\n    try {\n      // let img = values.features_image;\n      console.log(img, \"img\");\n      const formData = new FormData();\n      formData.append(\"name\", values.name);\n      formData.append(\"product_type\", 1);\n      formData.append(\"description\", values.description);\n      formData.append(\"price\", values.price);\n      formData.append(\"offer_price\", values.offer_price);\n      formData.append(\"category_id[]\", values.category_id);\n\n      formData.append(\"features_image\", img);\n      formData.append(\"stock\", values.stock);\n      formData.append(\"size\", \"L\");\n\n      formData.append(\"attribute_value_id[]\", values.size);\n\n\n\n      const config = {\n        // method:'POST',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n        // body: formData\n      };\n\n      axios.post(\n          \"https://loofer.bellazza.in/api/admin/product_create\",\n          formData,\n          config\n        )\n        .then((res) => {\n          if(res.status==200){\n            setSuccessMessage(\"Product added successfully\");\n            Swal.fire({\n              title: \"Product Status\",\n              text: \"Product added successfully\",\n              icon: \"success\",\n              });\n              setTimeout(() => {\n                Navigate(\"/dashboard/productlist\")\n              }, 1000);\n            \n          }else{\n            Swal.fire({\n              title: \"Product Status\",\n              text: \"You are not authorized as admin\",\n              icon: \"error\",\n              });\n          }\n          \n          // resetForm();\n          console.log({ res });\n        })\n        .catch((err) => {\n          console.error({ err });\n        });\n\n      // dispatch(createproductDispatch(formData));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n   };\n\n  const validationSchema = Yup.object({\n    // email: Yup.string().email('Invalid email address').required('Email is required'),\n    name: Yup.string().required(\"name is required\"),\n    product_type: Yup.string().required(\"product_type is required\"),\n    description: Yup.string().required(\"description is required\"),\n    sku: Yup.number().required(\"sku is required\"),\n    category: Yup.string().required(\"category is required\"),\n    price: Yup.number().required(\"price is required\"),\n    offer_price: Yup.number().required(\"offer_price is required\"),\n    quantity: Yup.number().required(\"quantity is required\"),\n    category_id: Yup.number().required(\"category_id is required\"),\n  });\n\n\n\n  const fetchData = () => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    };\n\n  fetch(`https://loofer.bellazza.in/api/admin/categories`, config)\n    .then((response) => response.json())\n    .then((res) => {\n      console.log(res, \"res reeees\");\n      let product = [];\n      if (res) {\n        res.map((val) => {\n          product.push(val);\n        });\n        setDataArray(product);\n\n        console.log({ res });\n      } else {\n        Swal.fire({\n          title: \"Category Status\",\n          text: \"You are not authorized as admin\",\n          icon: \"error\",\n        });\n      }\n    })\n    .catch((err) => {\n      console.error({ err });\n    });\n\n\n    fetch(`https://loofer.bellazza.in/api/admin/get_all_attributes`, config)\n    .then((response) => response.json())\n    .then((res) => {\n      console.log(res, \"res reeees\");\n      let product = [];\n      if (res) {\n        res.data.map((val) => {\n          if(val?.type==\"size\"){\n            product.push(val);\n          }\n         \n        });\n        setAttributes(product);\n\n        console.log({ res });\n      } else {\n        Swal.fire({\n          title: \"Attribute Status\",\n          text: \"You are not authorized as admin\",\n          icon: \"error\",\n        });\n      }\n    })\n    .catch((err) => {\n      console.error({ err });\n    });\n};\nconsole.log(\"dataArray\", dataArray);\nreturn (\n  <Formik\n    initialValues={{\n      // email:'',\n      name: \"\",\n      product_type: \"\",\n      description: \"\",\n      stock: \"\",\n      size: \"\",\n\n      category: \"\",\n      price: \"\",\n      offer_price: \"\",\n      quantity: \"\",\n      category_id: \"\",\n      features_image: null,\n    }}\n    // validationSchema={validationSchema}\n    onSubmit={(e) => {\n      // e.preventDefault()\n      for (let index = 0; index < 1; index++) {\n        // const element = array[index];\n        handleFormSubmit(e, index);\n      }\n    }}\n  >\n    {(formik) => {\n      const { errors, setFieldValue } = formik;\n      return (\n        <Form encType=\"multipart/form-data\">\n          <Box style={{ padding: 10 }}>\n            <Box\n              style={{\n                boxShadow:\n                  \"rgba(0, 0, 0, 0.06) 0px 3px 3px -2px, rgba(0, 0, 0, 0.04) 0px 3px 4px 0px, rgba(0, 0, 0, 0.04) 0px 1px 8px 0px\",\n                padding: 30,\n                background: \"white\",\n              }}\n            >\n              <h2>Add New Product</h2>\n              <Divider style={{ marginTop: 20, marginBottom: 20 }} />\n              <Grid container style={{ padding: 10 }} spacing={4}>\n                {successMessage && (\n                  <div style={{ color: \"green\", marginBottom: 10 }}>\n                    {successMessage}\n                  </div>\n                )}\n                <Grid item xs={12} lg={6}>\n                  <Field\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    style={{\n                      padding: 10,\n                      width: \"100%\",\n                      borderRadius: 5,\n                      border: errors?.name ? \"2px solid red\" : \"1px solid\",\n                      marginTop: 10,\n                    }}\n                    inputProps={{\n                      style: { padding: 12 },\n                    }}\n                  />\n                  <br />\n                  <ErrorMessage\n                    name=\"name\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                  <Field\n                    name=\"product_type\"\n                    type=\"text\"\n                    placeholder=\"product Code\"\n                    style={{\n                      padding: 10,\n                      width: \"100%\",\n                      borderRadius: 5,\n                      border: errors?.product_type\n                        ? \"2px solid red\"\n                        : \"1px solid\",\n                      marginTop: 10,\n                    }}\n                    inputProps={{\n                      style: { padding: 12 },\n                    }}\n                  />\n                  <br />\n                  <ErrorMessage\n                    name=\"product_type\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                  <Field\n                    name=\"description\"\n                    as=\"textarea\"\n                    rows=\"10\"\n                    type=\"text\"\n                    placeholder=\"description\"\n                    style={{\n                      padding: 10,\n                      width: \"100%\",\n                      borderRadius: 5,\n                      border: errors?.description\n                        ? \"2px solid red\"\n                        : \"1px solid\",\n                      marginTop: 10,\n                    }}\n                    inputProps={{\n                      style: { padding: 12 },\n                    }}\n                  />\n                  <br />\n                  <ErrorMessage\n                    name=\"description\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                  <Field\n                    name=\"stock\"\n                    type=\"text\"\n                    placeholder=\"Stock\"\n                    style={{\n                      padding: 10,\n                      width: \"100%\",\n                      borderRadius: 5,\n                      border: errors?.stock ? \"2px solid red\" : \"1px solid\",\n                      marginTop: 10,\n                    }}\n                    inputProps={{\n                      style: { padding: 12 },\n                    }}\n                  />\n                  <br />\n                  <ErrorMessage\n                    name=\"stock\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid>\n                {console.log('attributes', attributes)}\n                <Grid item xs={12} lg={6}>\n                  <Field\n                    name=\"size\"\n                    as=\"select\"\n                    style={{\n                      padding: 10,\n                      width: \"100%\",\n                      borderRadius: 5,\n                      border: errors?.size\n                        ? \"2px solid red\"\n                        : \"1px solid\",\n                      marginTop: 10,\n                    }}\n                  >\n                  <option value=''></option>\n                    \n                  {/* <option value='4'>XL</option> */}\n              \n                  \n                    \n                    {attributes.map((map)=>{\n                      \n                      return <option value={map?.id}>{map?.name}</option>\n                        \n                    })}\n                  \n                \n                \n                    \n                    \n                    {/* Add more options as needed */}\n                  </Field>\n                  <br />\n                  <ErrorMessage\n                    name=\"category_id\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid>\n                {/* <Grid item xs={12} lg={6}>\n                  <Field\n                    name=\"category\"\n                    type=\"text\"\n                    placeholder=\"CATEGORY\"\n                    style={{\n                      padding: 10,\n                      width: \"100%\",\n                      borderRadius: 5,\n                      border: errors?.category\n                        ? \"2px solid red\"\n                        : \"1px solid\",\n                      marginTop: 10,\n                    }}\n                    inputProps={{\n                      style: { padding: 12 },\n                    }}\n                  />\n                  <br />\n                  <ErrorMessage\n                    name=\"category\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid> */}\n                <Grid item xs={12} lg={6}>\n                  <Field\n                    name=\"price\"\n                    type=\"text\"\n                    placeholder=\"PRICE\"\n                    style={{\n                      padding: 10,\n                      width: \"100%\",\n                      borderRadius: 5,\n                      border: errors?.price ? \"2px solid red\" : \"1px solid\",\n                      marginTop: 10,\n                    }}\n                    inputProps={{\n                      style: { padding: 12 },\n                    }}\n                  />\n                  <br />\n                  <ErrorMessage\n                    name=\"price\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                  <Field\n                    name=\"offer_price\"\n                    type=\"text\"\n                    placeholder=\"Sale Price\"\n                    style={{\n                      padding: 10,\n                      width: \"100%\",\n                      borderRadius: 5,\n                      border: errors?.offer_price\n                        ? \"2px solid red\"\n                        : \"1px solid\",\n                      marginTop: 10,\n                    }}\n                    inputProps={{\n                      style: { padding: 12 },\n                    }}\n                  />\n                  <br />\n                  <ErrorMessage\n                    name=\"offer_price\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid>{\" \"}\n                <Grid item xs={12} lg={6}>\n                  <Field\n                    name=\"quantity\"\n                    type=\"text\"\n                    placeholder=\"Quantity\"\n                    style={{\n                      padding: 10,\n                      width: \"100%\",\n                      borderRadius: 5,\n                      border: errors?.quantity\n                        ? \"2px solid red\"\n                        : \"1px solid\",\n                      marginTop: 10,\n                    }}\n                    inputProps={{\n                      style: { padding: 12 },\n                    }}\n                  />\n                  <br />\n                  <ErrorMessage\n                    name=\"quantity\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                  <Field\n                    name=\"category_id\"\n                    as=\"select\"\n                    style={{\n                      padding: 10,\n                      width: \"100%\",\n                      borderRadius: 5,\n                      border: errors?.category_id\n                        ? \"2px solid red\"\n                        : \"1px solid\",\n                      marginTop: 10,\n                    }}\n                  >\n                    <option value=\"\">Select</option>\n                    {dataArray.map((map)=>{\n                      return  <option value={map.id}>{map.name} ({map?.parent?.name})</option>\n                    })}\n                    \n                    \n                    {/* Add more options as needed */}\n                  </Field>\n                  <br />\n                  <ErrorMessage\n                    name=\"category_id\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                  <input\n                    name=\"features_image\"\n                    type=\"file\"\n                    value={undefined}\n                    //   onChange={onImageChange}\n                    onChange={(event) => {\n                      setImageData(event.target.files[0]);\n                    }}\n                    // style={{\n                    // padding: 10,\n                    // width: '100%',\n                    // borderRadius: 5,\n                    // border: errors?.features_image ? '2px solid red' : '1px solid',\n                    // marginTop: 10\n                    // }}\n                    // inputProps={{\n                    // style: { padding: 12 }\n                    // }}\n                  />\n                  <br />\n                  <ErrorMessage\n                    name=\"features_image\"\n                    component=\"div\"\n                    style={{ color: \"red\", fontSize: 12 }}\n                  />\n                </Grid>\n                <Grid item xs={12} lg={6}></Grid>\n                <Grid item xs={12} lg={3}>\n                  <Button\n                    type=\"submit\"\n                    style={{\n                      background: \"red\",\n                      color: \"white\",\n                      marginTop: 30,\n                      borderRadius: 5,\n                      width: \"100%\",\n                    }}\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Form>\n      );\n    }}\n  </Formik>\n);\n};\n\nexport default ProfileForm;\n","import React, { useEffect } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport { Grid, Box, Button, Divider } from \"@mui/material\";\nimport { createCategoryDispatch } from \"reducers/HomeReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { SwapCalls } from \"@mui/icons-material\";\nimport {\n  Select,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  FormHelperText,\n} from \"@material-ui/core\";\n\nimport Swal from \"sweetalert2\";\n\nconst AddSubCategoryForm = () => {\n  const [dataArray, setDataArray] = useState(\n    JSON.parse(String(localStorage.getItem(\"category_list\"))) || []\n  );\n  const [categoryInfo, setCategoryInfo] = useState();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleFormSubmit = (values, index) => {\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"slug\", values.slug);\n    formData.append(\"description\", values.description);\n    formData.append(\"parent_id\", values.parent_id);\n    formData.append(\"image\", values.image);\n    formData.append(\"sub_parent_id\", values.sub_parent_id);\n\n    dispatch(createCategoryDispatch(formData));\n    console.log(\"values saved :\",values);\n  };\n\n  // Define validation schema using Yup\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    slug: Yup.string().required(\"Slug is required\"),\n    description: Yup.string().required(\"Description is required\"),\n    parent_id: Yup.string().required(\"Parent ID is required\"),\n    image: Yup.string().required(\"Image URL is required\"),\n    // .url('Invalid URL')\n  });\n\n  const fetchData = () => {\n      const config = {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      };\n\n    fetch(`https://loofer.bellazza.in/api/admin/categories`, config)\n      .then((response) => response.json())\n      .then((res) => {\n        console.log(res, \"res reeees\");\n        let product = [];\n        if (res) {\n          res.map((val) => {\n            product.push(val);\n          });\n          setDataArray(product);\n\n          console.log({ res });\n     \n        } else {\n          Swal.fire({\n            title: \"Category Status\",\n            text: \"You are not authorized as admin\",\n            icon: \"error\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.error({ err });\n      });\n  };\n \n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        slug: \"\",\n        description: \"\",\n        parent_id: \"\",\n        image: \"\",\n        sub_parent_id: \"8\",\n      }}\n      onSubmit={(e) => {\n        // e.preventDefault()\n        for (let index = 0; index < 1; index++) {\n          // const element = array[index];\n          handleFormSubmit(e, index);\n        }\n      }}\n      validationSchema={validationSchema} // Apply validation schema to Formik\n    >\n      {(formik) => {\n        const { errors } = formik;\n        return (\n          <Form>\n            <Box style={{ padding: 10 }}>\n              <Box\n                style={{\n                  boxShadow:\n                    \"rgba(0, 0, 0, 0.06) 0px 3px 3px -2px, rgba(0, 0, 0, 0.04) 0px 3px 4px 0px, rgba(0, 0, 0, 0.04) 0px 1px 8px 0px\",\n                  padding: 30,\n                  background: \"white\",\n                }}\n              >\n                <h2>Add Sub Category</h2>\n                <Divider style={{ marginTop: 20, marginBottom: 20 }} />\n                <Grid container style={{ padding: 10 }} spacing={4}>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.name ? \"2px solid red\" : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.name ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.name}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"slug\"\n                      type=\"text\"\n                      placeholder=\"Slug\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.slug ? \"2px solid red\" : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.slug ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.slug}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"description\"\n                      type=\"text\"\n                      placeholder=\"Description\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.description\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.description ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.description}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  {/* <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"parent_id\"\n                      type=\"text\"\n                      placeholder=\"Parent ID\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.parent_id\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.parent_id ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.parent_id}\n                      </span>\n                    ) : null}\n                  </Grid> */}\n                  <Grid item xs={12} lg={6}>\n                    <InputLabel htmlFor=\"parent_id\">Parent ID</InputLabel>\n                    <Field\n                      as={Select}\n                      style={{\n                        padding: 5,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.description\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 5,\n                      }}\n                      name=\"parent_id\"\n                      label=\"Parent ID\"\n                      error={errors.parent_id ? true : false}\n                      helperText={<ErrorMessage name=\"parent_id\" />}\n                    >\n                      \n                      \n                      {dataArray.map(count => {\n                        return ( <MenuItem value={count.id}>\n                        <em>{count.name}</em>\n                      </MenuItem>)\n                       \n                      })}\n                    </Field>\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"sub_parent_id\"\n                      type=\"text\"\n                      placeholder=\" Sub Parent ID\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.sub_parent_id\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.sub_parent_id ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.sub_parent_id}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"image\"\n                      value={undefined}\n                      type=\"file\" // Use type 'file' for file uploads\n                      placeholder=\"Image\"\n                      onChange={(event) => {\n                        // Set the selected image file in Formik's values\n                        formik.setFieldValue(\n                          \"image\",\n                          event.currentTarget.files[0]\n                        );\n                      }}\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.image ? \"2px solid red\" : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.image ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.image}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={6}></Grid>\n                  <Grid item xs={12} lg={3}>\n                    <Button\n                      type=\"submit\"\n                      style={{\n                        backgroundColor: \"red\",\n                        color: \"white\",\n                        marginTop: 30,\n                        // padding: 16,\n                        borderRadius: 5,\n                        width: \"100%\",\n                      }}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Box>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\nexport default AddSubCategoryForm;\n","import React from 'react';\nimport { Box, Divider } from '@mui/material';\nimport ProfileForm from 'app/form/ProfileForm';\nimport AddSubCategoryForm from 'app/form/AddSubCategoryForm';\n\nconst AddSubCategory = () => {\n\treturn (\n\t\t<div>\n\t\t\t<AddSubCategoryForm />\n\t\t</div>\n\t);\n};\n\nexport default AddSubCategory;"],"names":["Navigate","useNavigate","useDispatch","useState","JSON","parse","String","localStorage","getItem","dataArray","setDataArray","useSelector","state","home","token","img","setImageData","attributes","setAttributes","successMessage","setSuccessMessage","name","product_type","description","sku","price","offer_price","quantity","category_id","features_image","useEffect","fetchData","handleFormSubmit","values","index","setTimeout","console","log","formData","FormData","append","stock","size","config","headers","Authorization","axios","then","res","status","Swal","title","text","icon","catch","err","error","Yup","required","category","fetch","response","json","product","map","val","push","data","type","initialValues","onSubmit","e","formik","errors","setFieldValue","encType","style","padding","boxShadow","background","marginTop","marginBottom","container","spacing","color","item","xs","lg","placeholder","width","borderRadius","border","inputProps","component","fontSize","as","rows","value","id","parent","undefined","onChange","event","target","files","dispatch","slug","parent_id","image","sub_parent_id","createCategoryDispatch","validationSchema","shape","Accept","Box","Divider","Grid","InputLabel","htmlFor","Select","label","helperText","count","MenuItem","currentTarget","Button","backgroundColor"],"sourceRoot":""}