{"version":3,"file":"static/js/2664.1291851f.chunk.js","mappings":"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","sources":["app/views/sessions/JwtLogin.jsx","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js"],"sourcesContent":["import React, { useState , useEffect} from \"react\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Card, Checkbox, Grid, TextField } from \"@mui/material\";\nimport { Box, styled, useTheme } from \"@mui/material\";\nimport { Paragraph } from \"app/components/Typography\";\nimport axios from \"axios\";\nimport useAuth from \"app/hooks/useAuth\";\nimport { Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { loginDispatch } from \"reducers/HomeReducer\";\nimport * as Yup from \"yup\";\n\nconst FlexBox = styled(Box)(() => ({ display: \"flex\", alignItems: \"center\" }));\n\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: \"center\" }));\n\nconst ContentBox = styled(Box)(() => ({\n  height: \"100%\",\n  padding: \"32px\",\n  position: \"relative\",\n  background: \"rgba(0, 0, 0, 0.01)\",\n}));\n\nconst JWTRoot = styled(JustifyBox)(() => ({\n  background: \"#1A2038\",\n  minHeight: \"100% !important\",\n  \"& .card\": {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: \"1rem\",\n    display: \"flex\",\n    borderRadius: 12,\n    alignItems: \"center\",\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  remember: true,\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, \"Password must be 6 character length\")\n    .required(\"Password is required!\"),\n  email: Yup.string().required(\"Email is required!\"),\n});\n\nconst JwtLogin = () => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const { login } = useAuth();\n\n  useEffect(() => {\n  //  if(localStorage.getItem('token')){\n  //   navigate(\"/dashboard/default\")\n  //  }\n  });\n  const handleFormSubmit = (email,password) => {\n    setLoading(true);\n    const formData = new FormData();\n    // console.log(\"aaaa\", values?.values);\n    formData.append('login', email);\n     formData.append('password', password);\n    //   // console.log('login', values);\n      console.log('formData', formData.get('login'));\n    dispatch(loginDispatch(formData, setLoading, navigate))\n   \n \n      navigate(\"/dashboard/default\")\n    \n    \n    \n      \n   \n    \n    ;\n    \n    //   console.log(\"testing bro\", 1);\n    //   setLoading(true);\n    //   // Simulate loading, replace with your actual login logic.\n    //   // setTimeout(() => {\n    //   //   setLoading(false);\n    //   //   navigate(\"/\");\n    //   // }, 20); // Simulating a 2-second delay\n  };\n\n  return (\n    <JWTRoot>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <JustifyBox p={4} height=\"100%\" sx={{ minWidth: 320 }}>\n              <img\n                src=\"/assets/images/illustrations/dreamer.svg\"\n                width=\"100%\"\n                alt=\"\"\n              />\n            </JustifyBox>\n          </Grid>\n\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              {/* <Formik\n                onSubmit={handleFormSubmit}\n              \n                // validationSchema={validationSchema}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                }) => ( */}\n              <form>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"email\"\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  value={userEmail}\n                  onChange={(e) => {\n                    e.preventDefault();\n                    setUserEmail(e.target.value);\n                    console.log(\"sdasdsad\", userEmail);\n                  }}\n                  sx={{ mb: 3 }}\n                />\n              </form>\n              <form>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  name=\"password\"\n                  type=\"password\"\n                  label=\"Password\"\n                  variant=\"outlined\"\n                  value={userPassword}\n                  onChange={(e) => {\n                    e.preventDefault();\n                    setUserPassword(e.target.value);\n                    console.log(\"sdasdsad\", userPassword);\n                  }}\n                  sx={{ mb: 1.5 }}\n                />\n\n                <FlexBox justifyContent=\"space-between\">\n                  <FlexBox gap={1}>\n                    <Checkbox\n                      size=\"small\"\n                      name=\"remember\"\n                      sx={{ padding: 0 }}\n                    />\n\n                    <Paragraph>Remember Me</Paragraph>\n                  </FlexBox>\n\n                  <NavLink\n                    to=\"/session/forgot-password\"\n                    style={{ color: theme.palette.primary.main }}\n                  >\n                    Forgot password?\n                  </NavLink>\n                </FlexBox>\n\n                <LoadingButton\n                  onClick={(e) => {\n                    e.preventDefault();\n                    console.log(\"jjjjjjjjjjjj\", e);\n                    // navigate(\"/dashboard/default\");\n                    handleFormSubmit(userEmail,userPassword);\n                  }}\n                  type=\"button\"\n                  color=\"primary\"\n                  loading={loading}\n                  variant=\"contained\"\n                  sx={{ my: 2 }}\n                >\n                  Login\n                </LoadingButton>\n\n                <Paragraph>\n                  Don't have an account?\n                  <NavLink\n                    to=\"/session/signup\"\n                    style={{\n                      color: theme.palette.primary.main,\n                      marginLeft: 5,\n                    }}\n                  >\n                    Register\n                  </NavLink>\n                </Paragraph>\n              </form>\n              {/* )}\n              </Formik> */}\n            </ContentBox>\n          </Grid>\n        </Grid>\n      </Card>\n    </JWTRoot>\n  );\n};\n\nexport default JwtLogin;\n","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\n// TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n  const {\n      children,\n      disabled = false,\n      id: idProp,\n      loading = false,\n      loadingIndicator: loadingIndicatorProp,\n      loadingPosition = 'center',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","JWTRoot","minHeight","maxWidth","margin","borderRadius","Yup","shape","password","min","required","email","theme","useTheme","navigate","useNavigate","useState","loading","setLoading","userEmail","setUserEmail","userPassword","setUserPassword","dispatch","useDispatch","useAuth","login","useEffect","className","container","item","sm","xs","p","sx","minWidth","src","width","alt","fullWidth","size","type","name","label","variant","value","onChange","e","preventDefault","target","console","log","mb","gap","to","style","color","palette","primary","main","onClick","formData","FormData","append","get","loginDispatch","handleFormSubmit","my","marginLeft","getLoadingButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","LoadingButtonRoot","Button","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","root","startIconLoadingStart","loadingButtonClasses","endIconLoadingEnd","ownerState","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","marginRight","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","visibility","left","transform","vars","action","disabled","right","React","inProps","ref","useThemeProps","children","idProp","id","loadingIndicatorProp","other","_objectWithoutPropertiesLoose","useId","_jsx","CircularProgress","classes","slots","startIcon","endIcon","composedClasses","composeClasses","useUtilityClasses","loadingButtonLoadingIndicator","_jsxs"],"sourceRoot":""}