{"version":3,"file":"static/js/7798.d2c1b93e.chunk.js","mappings":"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","sources":["app/form/CategoryTable.js","app/form/DataGridD.js","app/views/category/CategoryList.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Grid, Button } from \"@mui/material\";\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editCategoryFunc } from 'reducers/HomeReducer';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { useNavigate } from 'react-router-dom/dist';\n\n\n\n\n\n\nvar rows = [\n\t{ id: 1, name: 'Snow', slug: 'Jon', age: 35 },\n];\n\nexport default function CategoryTable() {\n\tconst dispatch = useDispatch(); \n\tconst categoryData = useSelector((state) => state.home.category.categoryInfo);\n\tconst [productInfo,setProductInfo] = useState([])\n\n\tconst navigate = useNavigate();\n\n\n\t\n\tuseEffect(()=>{\n\t\t// console.log(categoryData,\":\",\"calling show category\");\n\t\t// var storageData=localStorage.getItem('category_list')\n\t\t// setProductInfo(JSON.parse(storageData))\n\t\t// console.log(\"hhsdhsh\", productInfo)\n\t\t// dispatch(showCategoryDispatch());\n\t\tfatchData();\t\t\t\n\n\t},[dispatch])\n\n\tconst fatchData=()=>{\n\t\t\n\t\tconst config = {\n\t\t\t\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\t\t\t}\n\t\t};\n\n\t\t\tfetch(`https://loofer.bellazza.in/api/admin/categories`,config).then(response=> response.json()).then(res => {\n\t\t\t\t\tconsole.log(res,'res reeees')\n\t\t\t\t\tlet product=[];\n\t\t\t\t\tif(res){\n\t\t\t\t\tres.map((val)=>{\n\t\t\t\t\t\tproduct.push(val)\n\t\t\t\t\t})\n\t\t\t\t\tsetProductInfo(product);\n\n\t\t\t\t\tconsole.log({res});\n\t\t\t\t}else{\n\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\ttitle: \"Category Status\",\n\t\t\t\t\t\ttext: \"You are not authorized as admin\",\n\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tconsole.error({err});\n\t\t\t\t});\n\n\t}\n\n\tconst fetchEditData = (categoryId) => {\n    const editData = rows.filter((data) => data.id === categoryId);\n    dispatch(editCategoryFunc(editData[0]));\n    navigate(\"/dashboard/editcategory\");\n    console.log(editData, 'd');\n  };\n\n\tconst mapCategoryDataToRows = (data) => {\n\t\tconsole.log(data, 'data');\n\t\tif (data && Array.isArray(data) && data.length > 0) {\n\t\t  return data.map((category) => ({\n\t\t\tid: category?.id||Math.floor(new Date().getTime()),\n\t\t\tname: category?.name,\n\t\t\tslug: category?.slug,\n\t\t\tdescription: category?.description,\n\t\t\tparent: category?.parent || 0,\n\t\t\timage_url: category?.image_url,\n\t\t\t// Map other properties as needed\n\t\t  }));\n\t\t} else {\n\t\t  return [\n        { id: 1, name: 'Snow', slug: 'Jon', age: 35, parent: '0', description: \"its a description for Slow\" },\n        { id: 2, name: 'glow', slug: 'Jack', age: 38, parent: '2', description: \"its a description for Glow\"}\n      ];\n\t\t}\n\t  };\n\t  \n\t  var rows = mapCategoryDataToRows(productInfo);\n\n\t  const columns = [\n      { field: 'id', headerName: 'ID', width: 90 },\n      {\n        field: 'name',\n        headerName: 'Name',\n        width: 150,\n        editable: true\n      },\n      {\n        field: 'slug',\n        headerName: 'Slug',\n        width: 150,\n        editable: true\n      },\n      {\n        field: 'description',\n        headerName: 'Description',\n        type: 'number',\n        width: 110,\n        editable: true\n      },\n      {\n        field: 'parent',\n        headerName: 'Parent',\n        description: 'This column has a value getter and is not sortable.',\n        sortable: false,\n        width: 160,\n        renderCell: (params) => {\n          console.log('parent', params);\n          return params?.row?.parent?.id;\n        }\n      },\n      {\n        field: 'image_url',\n        headerName: 'Image Url',\n        description: 'This column has a value getter and is not sortable.',\n        sortable: false,\n        width: 160,\n        renderCell: (params) => {\n          console.log('params', params);\n          return <img src={params.row.image_url} style={{ height: 50 }} />;\n        }\n      },\n\n      {\n        field: 'action',\n        headerName: 'Action',\n        width: 100,\n        editable: true,\n        renderCell: (cellValues) => {\n          console.log('cellValues', cellValues);\n          return (\n            <Box style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ marginLeft: 10 }}\n                onClick={(event) => {\n                  const config = {\n                    method: 'DELETE',\n                    headers: {\n                      'Content-Type': 'multipart/form-data',\n                      Authorization: `Bearer ${localStorage.getItem('token')}`\n                    }\n                  };\n\n                  fetch('https://loofer.bellazza.in/api/admin/categories/' + cellValues.id, config)\n                    .then((response) => response.json())\n                    .then((res) => {\n                      console.log(res);\n                      let product = [];\n                      if (res) {\n                        Swal.fire({\n                          title: 'Category Status',\n                          text: 'Delete Banner',\n                          icon: 'success'\n                        });\n                        fatchData();\n                      } else {\n                        Swal.fire({\n                          title: 'Banner Status',\n                          text: 'You are not authorized as admin',\n                          icon: 'error'\n                        });\n                      }\n\n                      console.log({ res });\n                    });\n                }}\n              >\n                Delete\n              </Button>\n            </Box>\n          );\n        }\n      },\n\n      {\n        field: 'edit',\n        headerName: 'Edit',\n        width: 100,\n        renderCell: (cellValues) => (\n          <Box style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginLeft: 10 }}\n              onClick={(event) => {\n                fetchEditData(cellValues.id);\n              }}\n            >\n              Edit\n            </Button>\n          </Box>\n        )\n      }\n    ];\n\t\n    console.log(\"image url product\", productInfo)\n\treturn (\n\t\t<Box sx={{ height: 400, width: '100%' }}>\n\t\t\t<DataGrid\n\t\t\n\t\t\t\trows={productInfo?.length >0 ? productInfo :rows}\n\t\t\t\tcolumns={columns}\n\t\t\t\tgetRowId={(row) => row.id || 2 }\n\t\t\t\t// initialState={{\n\t\t\t\t// \tpagination: {\n\t\t\t\t// \t\tpaginationModel: {\n\t\t\t\t// \t\t\tpageSize: 5\n\t\t\t\t// \t\t}\n\t\t\t\t// \t}\n\t\t\t\t// }}\n\t\t\t\t// pageSizeOptions={[5]}\n\t\t\t\tcheckboxSelection\n\t\t\t\tdisableRowSelectionOnClick\n\t\t\t/>\n\t\t</Box>\n\t);\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showCustomerDispatch } from 'reducers/HomeReducer';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\n\nconst columns = [\n\t{ field: 'id', headerName: 'ID', width: 90 },\n\t{\n\t\tfield: 'name',\n\t\theaderName: 'Name',\n\t\twidth: 150,\n\t\teditable: true\n\t},\n\t{\n\t\tfield: 'email',\n\t\theaderName: 'Email',\n\t\twidth: 150,\n\t\teditable: true\n\t},\n\t{\n\t\tfield: 'created_at',\n\t\theaderName: 'Created At',\n\t\ttype: 'number',\n\t\twidth: 110,\n\t\teditable: true\n\t},\n];\n\nconst rows = [\n\t{ id: 1, name: 'Snow', email: 'Jon', created_at: 35 },\n];\n\nexport default function DataGridD() {\n\n\tconst initialEditedData = {};\n\tconst dispatch = useDispatch(); \n\tconst [customerInfo,setCustomerInfo] = useState([])\n\n\tuseEffect(()=>{\n\t\tconsole.log(localStorage.getItem(\"token\"),\"customer token\")\n\t\t// dispatch(showCustomerDispatch());\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\t\t\t}\n\t\t};\n\n\t\t\tfetch('https://loofer.bellazza.in/api/admin/all_users',{\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\t\t\t\t}\n\t\t\t}).then(response => response.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tconsole.log(res,'res reeees')\n\t\t\t\t\tlet customer=[];\n\t\t\t\t\tif(res){\n\t\t\t\t\tres.users.map((val)=>{\n\t\t\t\t\t\tcustomer.push(val)\n\t\t\t\t\t})\n\t\t\t\t\tsetCustomerInfo(customer);\n\n\t\t\t\t\tconsole.log({res});\n\t\t\t\t}\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tconsole.error({err});\n\t\t\t\t});\n\t\t\t\n\n\t},[])\n\n\tconst mapCategoryDataToRows = (data) => {\n\t\tconsole.log(data, 'data');\n\t\tif (data && Array.isArray(data) && data.length > 0) {\n\t\t  return data.map((category) => ({\n\t\t\tid: category?.id||Math.floor(new Date().getTime()),\n\t\t\tname: category?.name,\n\t\t\temail: category?.email,\n\t\t\t\n\t\t\tcreated_at: new Date(category.created_at).toDateString(),\n\t\t\t// Map other properties as needed\n\t\t  }));\n\t\t} else {\n\t\t  return [\n\t\t\t{ id: 1, name: 'Snow', email: 'Jon', created_at:\"\"},\n\t\t  ];\n\t\t}\n\t  };\n\tvar rows = mapCategoryDataToRows(customerInfo);\n\treturn (\n\t\t<Box sx={{ height: 400, width: '100%' }}>\n\t\t\t{/* {console.log(customerInfo,'customerInfo')} */}\n\t\t\t<DataGrid\n\t\t\t\trows={customerInfo.length ? customerInfo : rows}\n\t\t\t\tcolumns={columns}\n\t\t\t\tgetRowId={(row) => row.id || 2 }\n\t\t\t\t// initialState={{\n\t\t\t\t// \tpagination: {\n\t\t\t\t// \t\tpaginationModel: {\n\t\t\t\t// \t\t\tpageSize: 5\n\t\t\t\t// \t\t}\n\t\t\t\t// \t}\n\t\t\t\t// }}\n\t\t\t\t// pageSizeOptions={[5]}\n\t\t\t\tcheckboxSelection\n\t\t\t\tdisableRowSelectionOnClick\n\t\t\t/>\n\t\t</Box>\n\t);\n}\n","import DataGridD from 'app/form/DataGridD';\nimport React from 'react';\nimport { Box, Divider } from '@mui/material';\nimport CategoryTable from 'app/form/CategoryTable';\n\nconst CategoryList = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Box\n\t\t\t\tstyle={{\n\t\t\t\t\tboxShadow:\n\t\t\t\t\t\t'rgba(0, 0, 0, 0.06) 0px 3px 3px -2px, rgba(0, 0, 0, 0.04) 0px 3px 4px 0px, rgba(0, 0, 0, 0.04) 0px 1px 8px 0px',\n\t\t\t\t\tpadding: 30,\n\t\t\t\t\tbackground: 'white'\n\t\t\t\t}}>\n\t\t\t\t<h2>Category List</h2>\n\t\t\t\t<Divider style={{ marginTop: 20, marginBottom: 20 }} />\n\t\t\t\t<CategoryTable />\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default CategoryList;\n"],"names":["CategoryTable","dispatch","useDispatch","useSelector","state","home","category","categoryInfo","useState","productInfo","setProductInfo","navigate","useNavigate","useEffect","fatchData","data","config","headers","localStorage","getItem","fetch","then","response","json","res","console","log","product","map","val","push","Swal","title","text","icon","catch","err","error","rows","Array","isArray","length","id","Math","floor","Date","getTime","name","slug","description","parent","image_url","age","columns","field","headerName","width","editable","type","sortable","renderCell","params","row","src","style","height","cellValues","display","justifyContent","variant","color","marginLeft","onClick","event","method","Authorization","categoryId","editData","filter","editCategoryFunc","fetchEditData","sx","getRowId","checkboxSelection","disableRowSelectionOnClick","DataGridD","customerInfo","setCustomerInfo","customer","users","email","created_at","toDateString","boxShadow","padding","background","marginTop","marginBottom"],"sourceRoot":""}