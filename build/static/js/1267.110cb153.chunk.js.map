{"version":3,"file":"static/js/1267.110cb153.chunk.js","mappings":"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","sources":["app/form/DataGridD.js","app/form/OrderTable.js","app/form/OrderDetailsTable.js","app/views/order/OrderDetails.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showCustomerDispatch } from 'reducers/HomeReducer';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\n\nconst columns = [\n\t{ field: 'id', headerName: 'ID', width: 90 },\n\t{\n\t\tfield: 'name',\n\t\theaderName: 'Name',\n\t\twidth: 150,\n\t\teditable: true\n\t},\n\t{\n\t\tfield: 'email',\n\t\theaderName: 'Email',\n\t\twidth: 150,\n\t\teditable: true\n\t},\n\t{\n\t\tfield: 'created_at',\n\t\theaderName: 'Created At',\n\t\ttype: 'number',\n\t\twidth: 110,\n\t\teditable: true\n\t},\n];\n\nconst rows = [\n\t{ id: 1, name: 'Snow', email: 'Jon', created_at: 35 },\n];\n\nexport default function DataGridD() {\n\n\tconst initialEditedData = {};\n\tconst dispatch = useDispatch(); \n\tconst [customerInfo,setCustomerInfo] = useState([])\n\n\tuseEffect(()=>{\n\t\tconsole.log(localStorage.getItem(\"token\"),\"customer token\")\n\t\t// dispatch(showCustomerDispatch());\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\t\t\t}\n\t\t};\n\n\t\t\taxios.get('https://loofer.bellazza.in/api/admin/all_users',{\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => {\n\t\t\t\t\tconsole.log(res,'res reeees')\n\t\t\t\t\tlet customer=[];\n\t\t\t\t\tif(res.status===200){\n\t\t\t\t\tres.data.users.map((val)=>{\n\t\t\t\t\t\tcustomer.push(val)\n\t\t\t\t\t})\n\t\t\t\t\tsetCustomerInfo(customer);\n\n\t\t\t\t\tconsole.log({res});\n\t\t\t\t}\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tconsole.error({err});\n\t\t\t\t});\n\t\t\t\n\n\t},[])\n\n\treturn (\n\t\t<Box sx={{ height: 400, width: '100%' }}>\n\t\t\t{/* {console.log(customerInfo,'customerInfo')} */}\n\t\t\t<DataGrid\n\t\t\t\trows={customerInfo.length ? customerInfo : rows}\n\t\t\t\tcolumns={columns}\n\t\t\t\t// initialState={{\n\t\t\t\t// \tpagination: {\n\t\t\t\t// \t\tpaginationModel: {\n\t\t\t\t// \t\t\tpageSize: 5\n\t\t\t\t// \t\t}\n\t\t\t\t// \t}\n\t\t\t\t// }}\n\t\t\t\t// pageSizeOptions={[5]}\n\t\t\t\tcheckboxSelection\n\t\t\t\tdisableRowSelectionOnClick\n\t\t\t/>\n\t\t</Box>\n\t);\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\nimport { Link, useNavigate } from 'react-router-dom';\n\n\nconst rows = [\n\t{ id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n\t{ id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n\t{ id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n\t{ id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n\t{ id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n\t{ id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n\t{ id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n\t{ id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n\t{ id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 }\n];\n\nexport default function OrderTable() {\n\tconst [orderInfo,setOrderInfo] = useState([])\n\tconst navigate = useNavigate();\n\n\n\tuseEffect(()=>{\n\t\tconsole.log(localStorage.getItem(\"token\"),\"customer token\")\n\t\t// dispatch(showCustomerDispatch());\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\t\t\t}\n\t\t};\n\n\t\taxios.post('https://loofer.bellazza.in/api/getAllOrder', null, {\n\t\t\theaders: {\n\t\t\t  'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\t\t\t}\n\t\t  }).then(res => {\n\t\t\t\t\tconsole.log(res,'res reeees')\n\t\t\t\t\tlet orders=[];\n\t\t\t\t\tif(res.status===200 && res.data){\n\t\t\t\t\t\tif(res.data.data.length > 0){\n\t\t\t\t\t\tsetOrderInfo(res.data.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tconsole.error({err});\n\t\t\t\t});\n\t\t\t\n\n\t},[])\n\n\tconst columns = [\n\t\t{ field: 'user_id', headerName: 'ID', width: 90 },\n\t\t{\n\t\t\tfield: 'name',\n\t\t\theaderName: 'Name',\n\t\t\twidth: 150,\n\t\t\teditable: true\n\t\t},\n\t\t// {\n\t\t// \tfield: 'order_item',\n\t\t// \theaderName: 'Order Items',\n\t\t// \twidth: 300, // Adjust the width as needed\n\t\t// \tsortable: false,\n\t\t// \trenderCell: (params) => (\n\t\t// \t  <ul>\n\t\t// \t\t{params.value.map((item, index) => (\n\t\t// \t\t  <li key={index}>\n\t\t// \t\t\t<strong>ID:</strong> {item.id}<br />\n\t\t// \t\t\t<strong>Order ID:</strong> {item.order_id}<br />\n\t\t// \t\t\t<strong>Product ID:</strong> {item.product_id}<br />\n\t\t// \t\t\t{/* Add other properties here */}\n\t\t// \t\t  </li>\n\t\t// \t\t))}\n\t\t// \t  </ul>\n\t\t// \t),\n\t\t//   },\n\t\t{\n\t\t\tfield: 'amount',\n\t\t\theaderName: 'Amount',\n\t\t\ttype: 'number',\n\t\t\twidth: 110,\n\t\t\teditable: true\n\t\t},\n\t\t{\n\t\t\tfield: 'transaction_id',\n\t\t\theaderName: 'Transaction ID',\n\t\t\tdescription: 'This column has a value getter and is not sortable.',\n\t\t\tsortable: false,\n\t\t\twidth: 280,\n\t\t},\n\t\t\n\t\t\n\t\t{\n\t\t\tfield: 'payment_status',\n\t\t\theaderName: 'Payment Status',\n\t\t\tdescription: 'This column has a value getter and is not sortable.',\n\t\t\tsortable: false,\n\t\t\twidth: 160,\n\t\t},\n\t\t{\n\t\t\tfield: 'status',\n\t\t\theaderName: 'Order status',\n\t\t\tdescription: 'This column has a value getter and is not sortable.',\n\t\t\tsortable: false,\n\t\t\twidth: 160,\n\t\t},\n\t\t{\n\t\t\tfield: 'viewDetails',\n\t\t\theaderName: 'View Details',\n\t\t\twidth: 150,\n\t\t\tsortable: false,\n\t\t\trenderCell: (params) => (\n\t\t\t  <Button\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tonClick={() => navigate(`/dashboard/orderdetails`, { state: { ID: params.id } })}\n\t\t\t  >\n\t\t\t\tView\n\t\t\t  </Button>\n\t\t\t),\n\t\t  },\n\t\t\n\t];\n\n\treturn (\n\t\t<Box sx={{ height: 400, width: '100%' }}>\n\t\t\t<DataGrid\n\t\t\t\trows={orderInfo}\n\t\t\t\tcolumns={columns}\n\t\t\t\t// initialState={{\n\t\t\t\t// \tpagination: {\n\t\t\t\t// \t\tpaginationModel: {\n\t\t\t\t// \t\t\tpageSize: 5\n\t\t\t\t// \t\t}\n\t\t\t\t// \t}\n\t\t\t\t// }}\n\t\t\t\t// pageSizeOptions={[5]}\n\t\t\t\t// checkboxSelection\n\t\t\t\t// disableRowSelectionOnClick\n\t\t\t/>\n\t\t</Box>\n\t);\n}\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Box from '@mui/material/Box';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\n\nconst columns = [\n    \n    { field: 'id', headerName: 'Order ID', width: 110 },\n    { field: 'user_id', headerName: 'User ID', width: 110 },\n    { field: 'name', headerName: 'Name', width: 150 },\n    { field: 'transaction_id', headerName: 'Transaction ID', width: 200 },\n    { field: 'amount', headerName: 'Amount', width: 110 },\n    { field: 'status', headerName: 'Order Status', width: 160 },\n    { field: 'payment_status', headerName: 'Payment Status', width: 160 },\n    { field: 'order_item_id', headerName: 'Order Item ID', width: 150 },\n    { field: 'order_item_order_id', headerName: 'Order Item Order ID', width: 200 },\n    { field: 'order_item_product_id', headerName: 'Order Item Product ID', width: 200 },\n    { field: 'order_item_quantity', headerName: 'Order Item Quantity', width: 150 },\n  ];\n\nexport default function OrderTable() {\n  const [orders, setOrders] = useState([]);\n  const location = useLocation();\n\n  const {ID} = location.state;\n\n\n\n  \n\n  useEffect(() => {\n    console.log(localStorage.getItem(\"token\"),\"customer token\")\n    fetchData();\n  }, [ID]);\n\n  const fetchData=()=>{\n    const config = {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n    };\n\n    axios.post('https://loofer.bellazza.in/api/getOrderDetail', {order_id:ID}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => {\n                console.log(res,'res reeees')\n                if(res.status===200 && res.data){\n                    // setOrderInfo(res.data.data);\n                    let orderData=res.data.data\n                    if (orderData) {\n                        console.log(orderData,'orderData')\n                        setOrders([\n                          {\n                            id: orderData.id,\n                            user_id: orderData.user_id,\n                            name: orderData.name,\n                            transaction_id: orderData.transaction_id,\n                            amount: orderData.amount,\n                            status: orderData.status,\n                            payment_status: orderData.payment_status,\n                            order_item_id: orderData.order_item.length > 0 ? orderData.order_item[0].id : '',\n                            order_item_order_id: orderData.order_item.length > 0 ? orderData.order_item[0].order_id : '',\n                            order_item_product_id: orderData.order_item.length > 0 ? orderData.order_item[0].product_id : '',\n                            order_item_quantity: orderData.order_item.length > 0 ? orderData.order_item[0].quantity : '',\n                          },\n                        ]);\n                      } else {\n                        console.error(\"orderData is undefined\");\n                        setOrders([]);\n                      }\n            }\n            }).catch(err => {\n                console.error({err});\n            });\n\n  }\n\n  return (\n    <Box sx={{ height: 400, width: '100%' }}>\n       { console.log(orders,'orders')}\n      <DataGrid\n        rows={orders}\n        columns={columns}\n        // getRowId={(row) => row.id}\n        // autoHeight\n        // disableColumnResize\n        // hideFooterPagination\n        // hideFooterSelectedRowCount\n        // hideFooterRowCount\n        // hideFooter\n      />\n    </Box>\n  );\n}\n","import DataGridD from 'app/form/DataGridD';\nimport React from 'react';\nimport { Box, Divider } from '@mui/material';\nimport OrderTable from 'app/form/OrderTable';\nimport OrderDetailsTable from 'app/form/OrderDetailsTable';\n\nconst OrderDetails = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Box\n\t\t\t\tstyle={{\n\t\t\t\t\tboxShadow:\n\t\t\t\t\t\t'rgba(0, 0, 0, 0.06) 0px 3px 3px -2px, rgba(0, 0, 0, 0.04) 0px 3px 4px 0px, rgba(0, 0, 0, 0.04) 0px 1px 8px 0px',\n\t\t\t\t\tpadding: 30,\n\t\t\t\t\tbackground: 'white'\n\t\t\t\t}}>\n\t\t\t\t<h2>Order Details</h2>\n\t\t\t\t<Divider style={{ marginTop: 20, marginBottom: 20 }} />\n\t\t\t\t<OrderDetailsTable />\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default OrderDetails;\n  "],"names":["columns","field","headerName","width","editable","type","rows","id","name","email","created_at","DataGridD","useDispatch","useState","customerInfo","setCustomerInfo","useEffect","console","log","localStorage","getItem","axios","headers","then","res","customer","status","data","users","map","val","push","catch","err","error","sx","height","length","checkboxSelection","disableRowSelectionOnClick","OrderTable","orderInfo","setOrderInfo","navigate","useNavigate","description","sortable","renderCell","params","variant","color","onClick","state","ID","orders","setOrders","useLocation","fetchData","order_id","orderData","user_id","transaction_id","amount","payment_status","order_item_id","order_item","order_item_order_id","order_item_product_id","product_id","order_item_quantity","quantity","Box","DataGrid","style","boxShadow","padding","background","Divider","marginTop","marginBottom"],"sourceRoot":""}