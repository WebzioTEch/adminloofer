{"version":3,"file":"static/js/8220.742f2ad8.chunk.js","mappings":"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","sources":["app/form/ProfileForm.js","app/form/AddCategoryForm.js","app/views/category/AddCategory.js"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Grid, Box, Button, Divider } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { createproductDispatch } from \"reducers/HomeReducer\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nconst ProfileForm = () => {\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const token = useSelector((state) => state.home.token);\n  const [img, setImageData] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    product_type: \"\",\n    description: \"\",\n    sku: \"\",\n    category: \"\",\n    price: \"\",\n    offer_price: \"\",\n    quantity: \"\",\n    category_id: \"\",\n    features_image: null,\n  });\n  const [productArray,setProductArray]=useState(\n\tJSON.parse(String(localStorage.getItem(\"product_list\")))||[]\n  );\n\n  // const onImageChange = e => {\n  // \tconst formData = new FormData({});\n\n  // \tif (e.target && e.target.files[0]) {\n  // \t  formData.append('features_image', e.target.files[0])\n  // \t  // for (const value of formData.values()) {\n  // \t  setImageData(formData)\n  // \t  // }\n  // \t}\n  //   }\n\n//   const handleFormSubmit = (values, { resetForm }) => {\n\tconst handleFormSubmit = (values, index) => {\n\t\tlet data =[];\n\t\tdata=JSON.parse(String(localStorage.getItem(\"product_list\")))||[]\n\t\tdata.push({...values,id:data.length*1+1});\n\t\tsetProductArray(data);\n\t\n\t\tlocalStorage.setItem(\"product_list\",JSON.stringify(productArray));\n\t\tif (index == 2){\n\t\t\tSwal.fire({\n\t\t\t\ttitle: \"Product Saved\",\n\t\t\t\ttext: \"You can close this window\",\n\t\t\t\ticon: \"success\",\n\t\t\t  });\n\t\t}\n\t\n\treturn;\n//     const timer = setTimeout(() => {\n//       setSuccessMessage(\"\");\n//     }, 2000);\n//     try {\n//       let img = values.features_image;\n//       console.log(img, \"img\");\n//       const formData = new FormData();\n//       formData.append(\"name\", values.name);\n//       formData.append(\"product_type\", values.product_type);\n//       formData.append(\"description\", values.description);\n//       formData.append(\"price\", values.price);\n//       formData.append(\"offer_price\", values.offer_price);\n//       formData.append(\"category_id[]\", Array.from(values.category_id));\n//       formData.append(\"features_image\", values.features_image);\n\n//       const config = {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         },\n//       };\n\n//       axios\n//         .post(\n//           \"https://loofer.bellazza.in/api/admin/product_create\",\n//           formData,\n//           config\n//         )\n//         .then((res) => {\n//           setSuccessMessage(\"Product added successfully\");\n//           resetForm();\n//           console.log({ res });\n//         })\n//         .catch((err) => {\n//           console.error({ err });\n//         });\n\n//       // dispatch(createproductDispatch(formData));\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//     }\n   };\n\n  const validationSchema = Yup.object({\n    // email: Yup.string().email('Invalid email address').required('Email is required'),\n    name: Yup.string().required(\"name is required\"),\n    product_type: Yup.string().required(\"product_type is required\"),\n    description: Yup.string().required(\"description is required\"),\n    sku: Yup.number().required(\"sku is required\"),\n    category: Yup.string().required(\"category is required\"),\n    price: Yup.number().required(\"price is required\"),\n    offer_price: Yup.number().required(\"offer_price is required\"),\n    quantity: Yup.number().required(\"quantity is required\"),\n    category_id: Yup.number().required(\"category_id is required\"),\n    features_image: Yup.mixed().required(\"features_image is required\"),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        // email:'',\n        name: \"\",\n        product_type: \"\",\n        description: \"\",\n        sku: \"\",\n        category: \"\",\n        price: \"\",\n        offer_price: \"\",\n        quantity: \"\",\n        category_id: \"\",\n        features_image: null,\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(e) => {\n        // e.preventDefault()\n        for (let index = 0; index < 3; index++) {\n          // const element = array[index];\n          handleFormSubmit(e, index);\n        }\n      }}\n    >\n      {(formik) => {\n        const { errors, setFieldValue } = formik;\n        return (\n          <Form encType=\"multipart/form-data\">\n            <Box style={{ padding: 10 }}>\n              <Box\n                style={{\n                  boxShadow:\n                    \"rgba(0, 0, 0, 0.06) 0px 3px 3px -2px, rgba(0, 0, 0, 0.04) 0px 3px 4px 0px, rgba(0, 0, 0, 0.04) 0px 1px 8px 0px\",\n                  padding: 30,\n                  background: \"white\",\n                }}\n              >\n                <h2>Add New Product</h2>\n                <Divider style={{ marginTop: 20, marginBottom: 20 }} />\n                <Grid container style={{ padding: 10 }} spacing={4}>\n                  {successMessage && (\n                    <div style={{ color: \"green\", marginBottom: 10 }}>\n                      {successMessage}\n                    </div>\n                  )}\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors?.name ? \"2px solid red\" : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    <ErrorMessage\n                      name=\"name\"\n                      component=\"div\"\n                      style={{ color: \"red\", fontSize: 12 }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"product_type\"\n                      type=\"text\"\n                      placeholder=\"product Code\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors?.product_type\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    <ErrorMessage\n                      name=\"product_type\"\n                      component=\"div\"\n                      style={{ color: \"red\", fontSize: 12 }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"description\"\n                      type=\"text\"\n                      placeholder=\"description\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors?.description\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    <ErrorMessage\n                      name=\"description\"\n                      component=\"div\"\n                      style={{ color: \"red\", fontSize: 12 }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"sku\"\n                      type=\"text\"\n                      placeholder=\"SKU\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors?.sku ? \"2px solid red\" : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    <ErrorMessage\n                      name=\"sku\"\n                      component=\"div\"\n                      style={{ color: \"red\", fontSize: 12 }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"category\"\n                      type=\"text\"\n                      placeholder=\"CATEGORY\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors?.category\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    <ErrorMessage\n                      name=\"category\"\n                      component=\"div\"\n                      style={{ color: \"red\", fontSize: 12 }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"price\"\n                      type=\"text\"\n                      placeholder=\"PRICE\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors?.price ? \"2px solid red\" : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    <ErrorMessage\n                      name=\"price\"\n                      component=\"div\"\n                      style={{ color: \"red\", fontSize: 12 }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"offer_price\"\n                      type=\"text\"\n                      placeholder=\"Sale Price\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors?.offer_price\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    <ErrorMessage\n                      name=\"offer_price\"\n                      component=\"div\"\n                      style={{ color: \"red\", fontSize: 12 }}\n                    />\n                  </Grid>{\" \"}\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"quantity\"\n                      type=\"text\"\n                      placeholder=\"Quantity\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors?.quantity\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    <ErrorMessage\n                      name=\"quantity\"\n                      component=\"div\"\n                      style={{ color: \"red\", fontSize: 12 }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"category_id\"\n                      as=\"select\"\n                      multiple\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors?.category_id\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                    >\n                      <option value={7}>Category_ID 7</option>\n                      <option value={5}>Category_ID 5</option>\n                      <option value={1}>Category_ID 1</option>\n                      {/* Add more options as needed */}\n                    </Field>\n                    <br />\n                    <ErrorMessage\n                      name=\"category_id\"\n                      component=\"div\"\n                      style={{ color: \"red\", fontSize: 12 }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <input\n                      name=\"features_image\"\n                      type=\"file\"\n                      value={undefined}\n                      //   onChange={onImageChange}\n                      onChange={(event) => {\n                        formik.setFieldValue(\n                          \"features_image\",\n                          event.target.files[0]\n                        );\n                      }}\n                      // style={{\n                      // padding: 10,\n                      // width: '100%',\n                      // borderRadius: 5,\n                      // border: errors?.features_image ? '2px solid red' : '1px solid',\n                      // marginTop: 10\n                      // }}\n                      // inputProps={{\n                      // style: { padding: 12 }\n                      // }}\n                    />\n                    <br />\n                    <ErrorMessage\n                      name=\"features_image\"\n                      component=\"div\"\n                      style={{ color: \"red\", fontSize: 12 }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} lg={6}></Grid>\n                  <Grid item xs={12} lg={3}>\n                    <Button\n                      type=\"submit\"\n                      style={{\n                        background: \"rgb(25, 118, 210)\",\n                        color: \"white\",\n                        marginTop: 30,\n                        borderRadius: 5,\n                        width: \"100%\",\n                      }}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Box>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ProfileForm;\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport { Grid, Box, Button, Divider } from \"@mui/material\";\nimport { createCategoryDispatch } from \"reducers/HomeReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { SwapCalls } from \"@mui/icons-material\";\n\nimport Swal from \"sweetalert2\";\n\nconst AddCategoryForm = () => {\n  const [dataArray, setDataArray] = useState(\n    JSON.parse(String(localStorage.getItem(\"category_list\")))\n  );\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = (values, index) => {\n    let data = [];\n    data = JSON.parse(String(localStorage.getItem(\"category_list\")));\n\n    data.push(values);\n    setDataArray(data);\n\n    localStorage.setItem(\"category_list\", JSON.stringify(dataArray));\n    if (index == 2) {\n      Swal.fire({\n        title: \"Category Saved\",\n        text: \"You can close this window\",\n        icon: \"success\",\n      });\n    }\n\n    return;\n\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"slug\", values.slug);\n    formData.append(\"description\", values.description);\n    formData.append(\"parent_id\", values.parent_id);\n    formData.append(\"image\", values.image);\n    dispatch(createCategoryDispatch(formData));\n    console.log(values);\n  };\n\n  // Define validation schema using Yup\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    slug: Yup.string().required(\"Slug is required\"),\n    description: Yup.string().required(\"Description is required\"),\n    parent_id: Yup.string().required(\"Parent ID is required\"),\n    image: Yup.string().required(\"Image URL is required\"),\n    // .url('Invalid URL')\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        slug: \"\",\n        description: \"\",\n        parent_id: \"\",\n        image: \"\",\n      }}\n      onSubmit={(e) => {\n        // e.preventDefault()\n        for (let index = 0; index < 3; index++) {\n          // const element = array[index];\n          handleFormSubmit(e, index);\n        }\n      }}\n      validationSchema={validationSchema} // Apply validation schema to Formik\n    >\n      {(formik) => {\n        const { errors } = formik;\n        return (\n          <Form>\n            <Box style={{ padding: 10 }}>\n              <Box\n                style={{\n                  boxShadow:\n                    \"rgba(0, 0, 0, 0.06) 0px 3px 3px -2px, rgba(0, 0, 0, 0.04) 0px 3px 4px 0px, rgba(0, 0, 0, 0.04) 0px 1px 8px 0px\",\n                  padding: 30,\n                  background: \"white\",\n                }}\n              >\n                <h2>Add New Category</h2>\n                <Divider style={{ marginTop: 20, marginBottom: 20 }} />\n                <Grid container style={{ padding: 10 }} spacing={4}>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.name ? \"2px solid red\" : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.name ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.name}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"slug\"\n                      type=\"text\"\n                      placeholder=\"Slug\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.slug ? \"2px solid red\" : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.slug ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.slug}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"description\"\n                      type=\"text\"\n                      placeholder=\"Description\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.description\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.description ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.description}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"parent_id\"\n                      type=\"text\"\n                      placeholder=\"Parent ID\"\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.parent_id\n                          ? \"2px solid red\"\n                          : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.parent_id ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.parent_id}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n                    <Field\n                      name=\"image\"\n                      value={undefined}\n                      type=\"file\" // Use type 'file' for file uploads\n                      placeholder=\"Image\"\n                      onChange={(event) => {\n                        // Set the selected image file in Formik's values\n                        formik.setFieldValue(\n                          \"image\",\n                          event.currentTarget.files[0]\n                        );\n                      }}\n                      style={{\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 5,\n                        border: errors.image ? \"2px solid red\" : \"1px solid\",\n                        marginTop: 10,\n                      }}\n                      inputProps={{\n                        style: { padding: 12 },\n                      }}\n                    />\n                    <br />\n                    {errors.image ? (\n                      <span style={{ color: \"red\", fontSize: 12 }}>\n                        {errors.image}\n                      </span>\n                    ) : null}\n                  </Grid>\n                  <Grid item xs={12} lg={6}></Grid>\n                  <Grid item xs={12} lg={3}>\n                    <Button\n                      type=\"submit\"\n                      style={{\n                        background: \"rgb(25, 118, 210)\",\n                        color: \"white\",\n                        marginTop: 30,\n                        // padding: 16,\n                        borderRadius: 5,\n                        width: \"100%\",\n                      }}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Box>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\nexport default AddCategoryForm;\n","import React from 'react';\nimport { Box, Divider } from '@mui/material';\nimport ProfileForm from 'app/form/ProfileForm';\nimport AddCategoryForm from 'app/form/AddCategoryForm';\n\nconst AddCategory = () => {\n\treturn (\n\t\t<div>\n\t\t\t<AddCategoryForm />\n\t\t</div>\n\t);\n};\n\nexport default AddCategory;\n"],"names":["useDispatch","useState","useSelector","state","home","token","successMessage","name","product_type","description","sku","category","price","offer_price","quantity","category_id","features_image","JSON","parse","String","localStorage","getItem","productArray","setProductArray","handleFormSubmit","values","index","data","push","id","length","setItem","stringify","Swal","title","text","icon","validationSchema","Yup","required","initialValues","onSubmit","e","formik","errors","setFieldValue","encType","style","padding","boxShadow","background","marginTop","marginBottom","container","spacing","color","item","xs","lg","type","placeholder","width","borderRadius","border","inputProps","component","fontSize","as","multiple","value","undefined","onChange","event","target","files","dataArray","setDataArray","shape","slug","parent_id","image","Box","Divider","Grid","currentTarget","Button"],"sourceRoot":""}