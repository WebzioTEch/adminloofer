{"version":3,"file":"static/js/1063.9b71a53a.chunk.js","mappings":"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","sources":["app/form/DataGridD.js","app/form/ProductTable.js","app/views/product/ProductList.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showCustomerDispatch } from 'reducers/HomeReducer';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\n\nconst columns = [\n\t{ field: 'id', headerName: 'ID', width: 90 },\n\t{\n\t\tfield: 'name',\n\t\theaderName: 'Name',\n\t\twidth: 150,\n\t\teditable: true\n\t},\n\t{\n\t\tfield: 'email',\n\t\theaderName: 'Email',\n\t\twidth: 150,\n\t\teditable: true\n\t},\n\t{\n\t\tfield: 'created_at',\n\t\theaderName: 'Created At',\n\t\ttype: 'number',\n\t\twidth: 110,\n\t\teditable: true\n\t},\n];\n\nconst rows = [\n\t{ id: 1, name: 'Snow', email: 'Jon', created_at: 35 },\n];\n\nexport default function DataGridD() {\n\n\tconst initialEditedData = {};\n\tconst dispatch = useDispatch(); \n\tconst [customerInfo,setCustomerInfo] = useState([])\n\n\tuseEffect(()=>{\n\t\tconsole.log(localStorage.getItem(\"token\"),\"customer token\")\n\t\t// dispatch(showCustomerDispatch());\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\t\t\t}\n\t\t};\n\n\t\t\tfetch('https://loofer.bellazza.in/api/admin/all_users',{\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\t\t\t\t}\n\t\t\t}).then(response => response.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tconsole.log(res,'res reeees')\n\t\t\t\t\tlet customer=[];\n\t\t\t\t\tif(res){\n\t\t\t\t\tres.users.map((val)=>{\n\t\t\t\t\t\tcustomer.push(val)\n\t\t\t\t\t})\n\t\t\t\t\tsetCustomerInfo(customer);\n\n\t\t\t\t\tconsole.log({res});\n\t\t\t\t}\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tconsole.error({err});\n\t\t\t\t});\n\t\t\t\n\n\t},[])\n\n\tconst mapCategoryDataToRows = (data) => {\n\t\tconsole.log(data, 'data');\n\t\tif (data && Array.isArray(data) && data.length > 0) {\n\t\t  return data.map((category) => ({\n\t\t\tid: category?.id||Math.floor(new Date().getTime()),\n\t\t\tname: category?.name,\n\t\t\temail: category?.email,\n\t\t\t\n\t\t\tcreated_at: new Date(category.created_at).toDateString(),\n\t\t\t// Map other properties as needed\n\t\t  }));\n\t\t} else {\n\t\t  return [\n\t\t\t{ id: 1, name: 'Snow', email: 'Jon', created_at:\"\"},\n\t\t  ];\n\t\t}\n\t  };\n\tvar rows = mapCategoryDataToRows(customerInfo);\n\treturn (\n\t\t<Box sx={{ height: 400, width: '100%' }}>\n\t\t\t{/* {console.log(customerInfo,'customerInfo')} */}\n\t\t\t<DataGrid\n\t\t\t\trows={customerInfo.length ? customerInfo : rows}\n\t\t\t\tcolumns={columns}\n\t\t\t\tgetRowId={(row) => row.id || 2 }\n\t\t\t\t// initialState={{\n\t\t\t\t// \tpagination: {\n\t\t\t\t// \t\tpaginationModel: {\n\t\t\t\t// \t\t\tpageSize: 5\n\t\t\t\t// \t\t}\n\t\t\t\t// \t}\n\t\t\t\t// }}\n\t\t\t\t// pageSizeOptions={[5]}\n\t\t\t\tcheckboxSelection\n\t\t\t\tdisableRowSelectionOnClick\n\t\t\t/>\n\t\t</Box>\n\t);\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid, GridDeleteIcon } from \"@mui/x-data-grid\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteproductDispatch,\n  showproductDispatch,\n} from \"reducers/HomeReducer\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst rows = [\n  {\n    id: \"1\",\n    name: \"snow\",\n    product_type: \"demo\",\n    description: \"demo\",\n    price: \"123\",\n    offer_price: \"1233\",\n    features_image: \"123123\",\n    category_id: \"123\",\n  },\n];\n\nexport default function ProductTable() {\n  const navigate = useNavigate();\n  const initialEditedData = {};\n  const dispatch = useDispatch();\n  const [editedData, setEditedData] = useState(initialEditedData);\n  const [productInfo, setProductInfo] = useState([]);\n  const [productFeilds, setProductFeilds] = useState([]);\n\n  const userInfo = useSelector((state) => state);\n  const token = useSelector((state) => state);\n\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 90 },\n    {\n      field: 'name',\n      headerName: 'First name',\n      width: 150,\n      editable: true,\n      sortable: false,\n      valueGetter: (params) => `${params.row.name || ''}`\n    },\n    {\n      field: 'product_catagory',\n      headerName: 'Product Catagory',\n      width: 150,\n      editable: true,\n      sortable: false,\n      valueGetter: (params) => `${params.row.category || ''}`\n    },\n    {\n      field: 'description',\n      headerName: 'Description',\n      type: 'number',\n      width: 160,\n      editable: true,\n      sortable: false,\n      valueGetter: (params) => `${params.row.description || ''}`\n    },\n    {\n      field: 'price',\n      headerName: 'Price',\n      description: 'This column has a value getter and is not sortable.',\n      type: 'number',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) => `${params.row.price || ''}`\n    },\n    {\n      field: 'offer_price',\n      headerName: 'Offer Price',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) => `${params.row.offer_price || ''}`\n    },\n    {\n      field: 'features_image',\n      headerName: 'Features Image',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) => `${params.row.features_image || ''}`,\n      renderCell: (params) => <img src={params.row.features_image} width={50} height={50} />\n    },\n    {\n      field: 'category_id',\n      headerName: 'Category id',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) => `${params.row.category_id || ''}`\n    },\n\n    {\n      field: 'actions',\n      headerName: 'Actions',\n      width: 100,\n      sortable: false,\n      renderCell: (params) => (\n        <>\n          {/* {console.log('ghfggf', params)} */}\n          <React.Fragment>\n            <GridDeleteIcon onClick={() => handleDelete(params.id)} style={{ cursor: 'pointer' }} />\n          </React.Fragment>\n        </>\n      )\n    },\n\n    {\n      field: 'Edit',\n      headerName: 'Actions',\n      width: 100,\n      sortable: false,\n      renderCell: (params) => (\n        <>\n          {/* {console.log('ghfggf', params)} */}\n          <React.Fragment>\n            <span onClick={() => handleEdit(params.id)} style={{ cursor: 'pointer' }} >Edit</span>\n          </React.Fragment>\n        </>\n      )\n    }\n    //   {\n    // \tfield: 'Edit',\n    // \theaderName: 'Actions',\n    // \twidth: 100,\n    // \tsortable: false,\n    // \trenderCell: (params) => (\n\n    // \t  <span onClick={() => handleEdit(params.row.id)} style={{ cursor: 'pointer' }}>\n    // \t  Edit\n    // \t</span>\n    // \t),\n    //   },\n  ];\n\n  const ID = \"7\";\n\n  const handleDelete = (idToDelete) => {\n    dispatch(deleteproductDispatch(idToDelete));\n    console.log(`Delete row with ID: ${idToDelete}`);\n    fatchData();\n  };\n\n  const handleCellEdit = (editData) => {\n    console.log(\"editing\");\n    console.log(editData);\n    setEditedData((prevData) => ({\n      ...prevData,\n      [editData.id]: editData,\n    }));\n  };\n\n  const handleEdit = (idToEdit) => {\n    console.log(idToEdit);\n    // Check if the edited data is available in the editedData object\n      // Dispatch an API call here with the editedRow data\n      // Example: dispatch(updateProductDispatch(ID, editedRow));\n      // dispatch(updateProductDispatch)\n    navigate(`/dashboard/editproduct/${idToEdit}`);\n    \n  };\n\n  useEffect(() => {\n    // var storageData=localStorage.getItem(\"product_list\");\n    // setProductFeilds(JSON.parse(storageData));\n    // console.log(\"lo;;yjpdr\", productFeilds);\n\n    // console.log(\"userInfo:\",userInfo)\n    // console.log(\"Token:\",token)\n    // dispatch(showproductDispatch(ID));\n    fatchData();\n  }, []);\n\n  const fatchData = () => {\n    const config = {\n      method: \"POST\",\n      body: {},\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    };\n\n    fetch(`https://loofer.bellazza.in/api/list-product`, config)\n      .then((response) => response.json())\n      .then((res) => {\n        console.log(res, \"res reeees\");\n        let product = [];\n        if (res) {\n          // res.data.data.map((val)=>{\n          product.push(res.message);\n          // })\n          setProductInfo(res.message);\n\n          console.log({ res });\n        } else {\n          Swal.fire({\n            title: \"Product Status\",\n            text: \"You are not authorized as admin\",\n            icon: \"error\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.error({ err });\n      });\n  };\n\n  const mapCategoryDataToRows = (data) => {\n    console.log(data, \"data\");\n    if (data && Array.isArray(data) && data.length > 0) {\n      return data.map((category) => (console.log(\"hopppeee\", category),\n\t  {\n\t\t\n        id: category?.id || Math.floor(new Date().getTime()),\n        name: category?.name,\n        offer_price: category?.offer_price,\n        product_type: category?.product_type,\n        price: category?.price,\n        quantity: category?.quantity,\n        description: category?.description,\n        image_url: category.image_url,\n        sku: category.sku,\n        actions:category.id\n        // Map other properties as needed\n      }));\n    } else {\n      return [];\n    }\n  };\n\n  var rows = mapCategoryDataToRows(productInfo);\n  console.log(productInfo);\n  return (\n    <Box sx={{ height: 400, width: \"100%\" }}>\n      {console.log(productInfo, \"productInfo\")}\n      <DataGrid\n        // rows={productInfo}\n        rows={productInfo?.length > 0 ? productInfo : rows}\n        columns={columns}\n        onEditCellChange={handleCellEdit}\n\t\t    getRowId={(row) => {\n\t\t\t  console.log(\"Logging in getRowId\",row);\n\t\t\t  return row?.id;\n\t\t  }}\n\t\t\n        // initialState={{\n        //   pagination: {\n        //     paginationModel: {\n        //       pageSize: 5,\n        //     },\n        //   },\n        // }}\n        // pageSizeOptions={[5]}\n        checkboxSelection\n        disableRowSelectionOnClick\n      />\n    </Box>\n  );\n}\n","import DataGridD from 'app/form/DataGridD';\nimport React from 'react';\nimport { Box, Divider } from '@mui/material';\nimport ProductTable from 'app/form/ProductTable';\n\nconst ProductList = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Box\n\t\t\t\tstyle={{\n\t\t\t\t\tboxShadow:\n\t\t\t\t\t\t'rgba(0, 0, 0, 0.06) 0px 3px 3px -2px, rgba(0, 0, 0, 0.04) 0px 3px 4px 0px, rgba(0, 0, 0, 0.04) 0px 1px 8px 0px',\n\t\t\t\t\tpadding: 30,\n\t\t\t\t\tbackground: 'white'\n\t\t\t\t}}>\n\t\t\t\t<h2>Product List</h2>\n\t\t\t\t<Divider style={{ marginTop: 20, marginBottom: 20 }} />\n\t\t\t\t<ProductTable />\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default ProductList;\n"],"names":["columns","field","headerName","width","editable","type","DataGridD","useDispatch","useState","customerInfo","setCustomerInfo","useEffect","console","log","localStorage","getItem","fetch","headers","then","response","json","res","customer","users","map","val","push","catch","err","error","data","rows","Array","isArray","length","category","id","Math","floor","Date","getTime","name","email","created_at","toDateString","sx","height","getRowId","row","checkboxSelection","disableRowSelectionOnClick","ProductTable","navigate","useNavigate","dispatch","setEditedData","productInfo","setProductInfo","useSelector","state","sortable","valueGetter","params","description","price","offer_price","features_image","renderCell","src","category_id","onClick","handleDelete","style","cursor","handleEdit","idToDelete","deleteproductDispatch","fatchData","idToEdit","config","method","body","Authorization","message","Swal","title","text","icon","product_type","quantity","image_url","sku","actions","Box","DataGrid","onEditCellChange","editData","prevData","boxShadow","padding","background","Divider","marginTop","marginBottom"],"sourceRoot":""}